{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\n\nfunction recursiveListen(object, accumulator, accIndex, cb) {\n  if (Array.isArray(object)) {\n    var initialValue = new AnimatedTracker([], []);\n    return object.reduce(function (previousValue, currentValue, currentIndex, array) {\n      var result = recursiveListen(currentValue, previousValue.values, currentIndex, cb);\n      previousValue.values[currentIndex] = result.values;\n      previousValue.listeners[currentIndex] = result.listeners;\n      return previousValue;\n    }, initialValue);\n  }\n\n  if (object instanceof Animated.Value || object instanceof Animated.Interpolation) {\n    var id = addListenerForAnimated(object, accumulator, accIndex, cb);\n    return new AnimatedTracker(object.__getValue(), new ListenerTracker(id, object));\n  }\n\n  if (typeof object === 'object' && object !== null) {\n    var _initialValue = new AnimatedTracker({}, {});\n\n    return Object.keys(object).reduce(function (previousValue, currentValue) {\n      var value = object[currentValue];\n      var result = recursiveListen(value, previousValue.values, currentValue, cb);\n      previousValue.values[currentValue] = result.values;\n      previousValue.listeners[currentValue] = result.listeners;\n      return previousValue;\n    }, _initialValue);\n  }\n\n  return new AnimatedTracker(object);\n}\n\nfunction addListenerForAnimated(animatedValue, accumulator, accIndex, cb) {\n  var addListener = animatedValue._parent ? animatedValue._parent.addListener.bind(animatedValue._parent) : animatedValue.addListener.bind(animatedValue);\n  var interpolator = animatedValue._interpolation;\n\n  var callback = function callback(e) {\n    return e;\n  };\n\n  if (interpolator) {\n    callback = function callback(_value) {\n      return interpolator(_value);\n    };\n  }\n\n  var prevCallback = callback;\n\n  callback = function callback(e) {\n    var value = prevCallback(e.value);\n    accumulator[accIndex] = value;\n    cb();\n  };\n\n  return addListener(callback);\n}\n\nexport function listen(object, cb) {\n  return recursiveListen(object, null, null, cb);\n}\n\nfunction recursiveRemoveListeners(listeners) {\n  if (Array.isArray(listeners)) {\n    listeners.forEach(function (listener, index) {\n      return recursiveRemoveListeners(listener);\n    });\n  } else if (listeners instanceof ListenerTracker) {\n    var id = listeners.id;\n    var object = listeners.object;\n    object._parent ? object._parent.removeListener(id) : object.removeListener(id);\n  } else if (typeof listeners === 'object' && listeners !== null) {\n    Object.keys(listeners).forEach(function (key) {\n      return recursiveRemoveListeners(listeners[key]);\n    });\n  }\n}\n\nexport function removeListeners(listeners) {\n  if (listeners instanceof AnimatedTracker) {\n    recursiveRemoveListeners(listeners.listeners);\n  } else {\n    recursiveRemoveListeners(listeners);\n  }\n}\n\nvar ListenerTracker = function ListenerTracker(id, object) {\n  _classCallCheck(this, ListenerTracker);\n\n  this.id = id;\n  this.object = object;\n};\n\nvar AnimatedTracker = function AnimatedTracker(values, listeners) {\n  _classCallCheck(this, AnimatedTracker);\n\n  this.values = values;\n  this.listeners = listeners;\n};","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/node_modules/react-native-d3multiline-chart/utils/AnimatedListener/index.js"],"names":["recursiveListen","object","accumulator","accIndex","cb","Array","isArray","initialValue","AnimatedTracker","reduce","previousValue","currentValue","currentIndex","array","result","values","listeners","Animated","Value","Interpolation","id","addListenerForAnimated","__getValue","ListenerTracker","Object","keys","value","animatedValue","addListener","_parent","bind","interpolator","_interpolation","callback","e","_value","prevCallback","listen","recursiveRemoveListeners","forEach","listener","index","removeListener","key","removeListeners"],"mappings":"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","sourcesContent":["// @flow\r\nimport { Animated } from 'react-native';\r\n\r\ntype ResultArray = {\r\n  values: any[],\r\n  listeners: any[]\r\n};\r\n\r\ntype ResultObject = {\r\n  values: Object,\r\n  listeners: Object\r\n};\r\n\r\ntype ResultAnimated = {\r\n  values: number | string,\r\n  listeners: string\r\n};\r\n\r\ntype ResultOther = {\r\n  values: any\r\n};\r\n\r\ntype RecResult = ResultArray | ResultObject;\r\n\r\ntype Result = RecResult | ResultAnimated | ResultOther;\r\nexport type AnimatedListener = Result;\r\n\r\ntype AnimatedValue = typeof Animated.Value | typeof Animated.Interpolation;\r\n\r\n/**\r\n * Iterates object keys to find Animated objects to add listeners to and returns an object of values and listeners. The values field will be shaped identically to the passed in object with the Animated objects replaced with the value from __getValue at the time it was called.\r\n */\r\nfunction recursiveListen(\r\n  object,\r\n  accumulator: ResultArray | ResultObject,\r\n  accIndex: number,\r\n  cb: Function\r\n): RecResult {\r\n  if (Array.isArray(object)) {\r\n    let initialValue = new AnimatedTracker([], []);\r\n    return object.reduce(\r\n      (previousValue, currentValue, currentIndex, array) => {\r\n        const result = recursiveListen(\r\n          currentValue,\r\n          previousValue.values,\r\n          currentIndex,\r\n          cb\r\n        );\r\n        previousValue.values[currentIndex] = result.values;\r\n        previousValue.listeners[currentIndex] = result.listeners;\r\n        return previousValue;\r\n      },\r\n      initialValue\r\n    );\r\n  }\r\n  if (\r\n    object instanceof Animated.Value ||\r\n    object instanceof Animated.Interpolation\r\n  ) {\r\n    const id = addListenerForAnimated(object, accumulator, accIndex, cb);\r\n    return new AnimatedTracker(\r\n      object.__getValue(),\r\n      new ListenerTracker(id, object)\r\n    );\r\n  }\r\n  if (typeof object === 'object' && object !== null) {\r\n    let initialValue = new AnimatedTracker({}, {});\r\n    return Object.keys(object).reduce((previousValue, currentValue) => {\r\n      const value = object[currentValue];\r\n      const result = recursiveListen(\r\n        value,\r\n        previousValue.values,\r\n        currentValue,\r\n        cb\r\n      );\r\n      previousValue.values[currentValue] = result.values;\r\n      previousValue.listeners[currentValue] = result.listeners;\r\n      return previousValue;\r\n    }, initialValue);\r\n  }\r\n  return new AnimatedTracker(object);\r\n}\r\nfunction addListenerForAnimated(\r\n  animatedValue: AnimatedValue,\r\n  accumulator: ResultArray | ResultObject,\r\n  accIndex: number,\r\n  cb: Function\r\n) {\r\n  const addListener = animatedValue._parent\r\n      ? animatedValue._parent.addListener.bind(animatedValue._parent)\r\n      : animatedValue.addListener.bind(animatedValue);\r\n  const interpolator = animatedValue._interpolation;\r\n  let callback = e => e;\r\n  if (interpolator) {\r\n    callback = _value => interpolator(_value);\r\n  }\r\n  let prevCallback = callback;\r\n  callback = e => {\r\n    const value = prevCallback(e.value);\r\n    accumulator[accIndex] = value;\r\n    cb();\r\n  };\r\n  return addListener(callback);\r\n}\r\nexport function listen(object: Object | any[], cb: Function): Result {\r\n    return recursiveListen(object, null, null, cb);\r\n}\r\n\r\n/**\r\n * Iterates object keys to find a ListenerTracker with an Animated object and listener id to remove\r\n */\r\nfunction recursiveRemoveListeners(listeners: Object | any[]) {\r\n  if (Array.isArray(listeners)) {\r\n    listeners.forEach((listener, index) =>\r\n      recursiveRemoveListeners(listener)\r\n    );\r\n  } else if (listeners instanceof ListenerTracker) {\r\n    const id = listeners.id;\r\n    const object = listeners.object;\r\n    object._parent\r\n        ? object._parent.removeListener(id)\r\n        : object.removeListener(id);\r\n  } else if (typeof listeners === 'object' && listeners !== null) {\r\n    Object.keys(listeners).forEach(key =>\r\n      recursiveRemoveListeners(listeners[key])\r\n    );\r\n  }\r\n}\r\nexport function removeListeners(listeners: Object | any[] | AnimatedTracker) {\r\n  if (listeners instanceof AnimatedTracker) {\r\n    recursiveRemoveListeners(listeners.listeners);\r\n  } else {\r\n    recursiveRemoveListeners(listeners);\r\n  }\r\n}\r\n\r\nclass ListenerTracker {\r\n  id: string;\r\n  object: Animated.Value | Animated.Interpolation;\r\n  constructor(id: string, object: Animated.Value | Animated.Interpolation) {\r\n    this.id = id;\r\n    this.object = object;\r\n  }\r\n}\r\n\r\nclass AnimatedTracker {\r\n  values: any[] | Object | number | string;\r\n  listeners: ?(ListenerTracker | ListenerTracker[] | Object);\r\n  constructor(\r\n    values?: any[] | Object | string,\r\n    listeners?: ListenerTracker | ListenerTracker[] | Object\r\n  ) {\r\n    this.values = values;\r\n    this.listeners = listeners;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}