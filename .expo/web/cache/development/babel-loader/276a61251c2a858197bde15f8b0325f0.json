{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\winston\\\\Documents\\\\react-native-boilerplate-master\\\\src\\\\scenes\\\\home\\\\Home.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"../../components/Button\";\nimport { colors } from \"../../theme\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport Svg, { Circle, Line, G, Path, Rect } from 'react-native-svg';\nimport * as d3 from \"d3\";\nimport * as scale from 'd3-scale';\nimport _ from 'lodash';\nimport { MultiLineChart } from 'react-native-d3multiline-chart';\nvar data2 = [[{\n  \"y\": \"202\",\n  \"x\": 2000\n}, {\n  \"y\": \"215\",\n  \"x\": 2001\n}, {\n  \"y\": \"179\",\n  \"x\": 2002\n}, {\n  \"y\": \"199\",\n  \"x\": 2003\n}, {\n  \"y\": \"134\",\n  \"x\": 2003\n}, {\n  \"y\": \"176\",\n  \"x\": 2010\n}], [{\n  \"y\": \"152\",\n  \"x\": 2000\n}, {\n  \"y\": \"189\",\n  \"x\": 2002\n}, {\n  \"y\": \"179\",\n  \"x\": 2004\n}, {\n  \"y\": \"199\",\n  \"x\": 2006\n}, {\n  \"y\": \"134\",\n  \"x\": 2008\n}, {\n  \"y\": \"176\",\n  \"x\": 2010\n}]];\nvar leftAxisData = [134, 144, 154, 164, 174, 184, 194, 204, 215];\nvar bottomAxisData = [2000, 2002, 2004, 2006, 2008, 2010];\nvar legendColor = ['#00b7d4', 'red'];\nvar legendText = ['sales', 'year'];\nvar minX = 2000,\n    maxX = 2010;\nvar minY = 134,\n    maxY = 215;\nvar Color = ['#00b7d4', 'red'];\nvar bottomAxisDataToShow = [\"Jan 2017\", \"Feb 2017\", \"Mar 2017\", \"Apr 2017\", \"May 2017\", \"Jun 2017\", \"Jul 2017\", \"Aug 2017\"];\nvar leftAxisDataToShow = [\"10%\", \"20%\", \"30%\", \"40%\", \"50%\", \"60%\", \"70%\", \"80%\", \"90%\"];\nvar labels = ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5', 'Label 6'];\nvar data = [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100];\nvar data1 = [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100];\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.lightGrayPurple\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20\n  }\n});\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: styles.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }\n  }, React.createElement(StatusBar, {\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, \"Home\"), React.createElement(View, {\n    style: {\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, React.createElement(LineChart, {\n    data: {\n      labels: labels,\n      datasets: [{\n        data: data\n      }, {\n        data: data1\n      }]\n    },\n    width: Dimensions.get('window').width - 50,\n    height: 220,\n    chartConfig: {\n      backgroundColor: '#e26a00',\n      backgroundGradientFrom: '#D9D9D9',\n      backgroundGradientTo: '#FFF',\n      decimalPlaces: 2,\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(0, 0, 0, \" + opacity + \")\";\n      },\n      labelColor: function labelColor() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return \"rgba(0, 0, 0, \" + opacity + \")\";\n      },\n      style: {\n        borderRadius: 16\n      },\n      propsForDots: {\n        r: '6',\n        strokeWidth: '2',\n        stroke: '#ffa726'\n      }\n    },\n    bezier: true,\n    style: {\n      marginVertical: 5,\n      borderRadius: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, {\n    title: \"Go to Details\",\n    color: \"white\",\n    backgroundColor: colors.lightPurple,\n    onPress: function onPress() {\n      navigation.navigate('Details', {\n        from: 'Home'\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: styles2.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, React.createElement(MultiLineChart, {\n    data: data2,\n    leftAxisData: leftAxisData,\n    bottomAxisData: bottomAxisData,\n    legendColor: legendColor,\n    legendText: legendText,\n    minX: minX,\n    maxX: maxX,\n    minY: minY,\n    maxY: maxY,\n    scatterPlotEnable: false,\n    dataPointsVisible: true,\n    Color: Color,\n    bottomAxisDataToShow: bottomAxisDataToShow,\n    circleLegendType: true,\n    fillArea: true,\n    yAxisGrid: false,\n    xAxisGrid: false,\n    hideXAxis: false,\n    hideYAxis: false,\n    inclindTick: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 8\n    }\n  })));\n};\n\nvar styles2 = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  }\n});\nHome.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func\n  })\n};\nHome.defaultProps = {\n  navigation: {\n    navigate: function navigate() {\n      return null;\n    }\n  }\n};\nexport default Home;","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/src/scenes/home/Home.js"],"names":["React","PropTypes","Button","colors","LineChart","Svg","Circle","Line","G","Path","Rect","d3","scale","_","MultiLineChart","data2","leftAxisData","bottomAxisData","legendColor","legendText","minX","maxX","minY","maxY","Color","bottomAxisDataToShow","leftAxisDataToShow","labels","data","Math","random","data1","styles","StyleSheet","create","root","flex","flexDirection","alignItems","justifyContent","backgroundColor","lightGrayPurple","title","fontSize","marginBottom","Home","navigation","datasets","Dimensions","get","width","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","labelColor","style","borderRadius","propsForDots","r","strokeWidth","stroke","marginVertical","lightPurple","navigate","from","styles2","container","propTypes","shape","func","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAIA,OAAOC,MAAP;AACA,SAASC,MAAT;AACA,SAASC,SAAT,QAAyB,wBAAzB;AACA,OAAOC,GAAP,IAAaC,MAAb,EAAqBC,IAArB,EAA2BC,CAA3B,EAA8BC,IAA9B,EAAoCC,IAApC,QAAgD,kBAAhD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,cAAT,QAA+B,gCAA/B;AAEA,IAAIC,KAAK,GAAE,CAAE,CAAC;AACZ,OAAK,KADO;AAEZ,OAAK;AAFO,CAAD,EAGV;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CAHU,EAMV;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CANU,EASV;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CATU,EAYV;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CAZU,EAeV;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CAfU,CAAF,EAmBX,CAAC;AACC,OAAK,KADN;AAEC,OAAK;AAFN,CAAD,EAGG;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CAHH,EAMG;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CANH,EASG;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CATH,EAYG;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CAZH,EAeG;AACD,OAAK,KADJ;AAED,OAAK;AAFJ,CAfH,CAnBW,CAAX;AAwCA,IAAIC,YAAY,GAAG,CACnB,GADmB,EACf,GADe,EACX,GADW,EACP,GADO,EACH,GADG,EACC,GADD,EACK,GADL,EACS,GADT,EACa,GADb,CAAnB;AAGA,IAAIC,cAAc,GAAG,CACrB,IADqB,EAChB,IADgB,EACX,IADW,EACN,IADM,EACD,IADC,EACI,IADJ,CAArB;AAGA,IAAIC,WAAW,GAAG,CAAC,SAAD,EAAW,KAAX,CAAlB;AACA,IAAIC,UAAU,GAAG,CAAC,OAAD,EAAS,MAAT,CAAjB;AACA,IAAIC,IAAI,GAAE,IAAV;AAAA,IAAgBC,IAAI,GAAE,IAAtB;AACA,IAAIC,IAAI,GAAE,GAAV;AAAA,IAAeC,IAAI,GAAE,GAArB;AAGA,IAAIC,KAAK,GAAG,CAAC,SAAD,EAAW,KAAX,CAAZ;AAEA,IAAIC,oBAAoB,GAAG,CACzB,UADyB,EACb,UADa,EACD,UADC,EACW,UADX,EACuB,UADvB,EACmC,UADnC,EAC+C,UAD/C,EAC2D,UAD3D,CAA3B;AAIA,IAAIC,kBAAkB,GAAG,CACvB,KADuB,EACjB,KADiB,EACX,KADW,EACL,KADK,EACC,KADD,EACO,KADP,EACa,KADb,EACmB,KADnB,EACyB,KADzB,CAAzB;AAGA,IAAMC,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,CAAf;AAQE,IAAMC,IAAI,GAAG,CACbC,IAAI,CAACC,MAAL,KAAgB,GADH,EAEbD,IAAI,CAACC,MAAL,KAAgB,GAFH,EAGbD,IAAI,CAACC,MAAL,KAAgB,GAHH,EAIbD,IAAI,CAACC,MAAL,KAAgB,GAJH,EAKbD,IAAI,CAACC,MAAL,KAAgB,GALH,EAMbD,IAAI,CAACC,MAAL,KAAgB,GANH,CAAb;AAQA,IAAMC,KAAK,GAAG,CACZF,IAAI,CAACC,MAAL,KAAgB,GADJ,EAEZD,IAAI,CAACC,MAAL,KAAgB,GAFJ,EAGZD,IAAI,CAACC,MAAL,KAAgB,GAHJ,EAIZD,IAAI,CAACC,MAAL,KAAgB,GAJJ,EAKZD,IAAI,CAACC,MAAL,KAAgB,GALJ,EAMZD,IAAI,CAACC,MAAL,KAAgB,GANJ,CAAd;AAWF,IAAME,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,cAAc,EAAE,QAJZ;AAKJC,IAAAA,eAAe,EAAErC,MAAM,CAACsC;AALpB,GADyB;AAQ/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,YAAY,EAAE;AAFT;AARwB,CAAlB,CAAf;;AAcA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,UAAH,QAAGA,UAAH;AAAA,SACX,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEd,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACU,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACJ,MAAAA,UAAU,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,SAAD;AACE,IAAA,IAAI,EAAE;AACJX,MAAAA,MAAM,EAAEA,MADJ;AAEJoB,MAAAA,QAAQ,EAAE,CACR;AACEnB,QAAAA,IAAI,EAAEA;AADR,OADQ,EAIR;AACEA,QAAAA,IAAI,EAAEG;AADR,OAJQ;AAFN,KADR;AAYE,IAAA,KAAK,EAAEiB,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,EAZ1C;AAaE,IAAA,MAAM,EAAE,GAbV;AAcE,IAAA,WAAW,EAAE;AACXV,MAAAA,eAAe,EAAE,SADN;AAEXW,MAAAA,sBAAsB,EAAE,SAFb;AAGXC,MAAAA,oBAAoB,EAAE,MAHX;AAIXC,MAAAA,aAAa,EAAE,CAJJ;AAKXC,MAAAA,KAAK,EAAE;AAAA,YAACC,OAAD,uEAAW,CAAX;AAAA,kCAAkCA,OAAlC;AAAA,OALI;AAMXC,MAAAA,UAAU,EAAE;AAAA,YAACD,OAAD,uEAAW,CAAX;AAAA,kCAAkCA,OAAlC;AAAA,OAND;AAOXE,MAAAA,KAAK,EAAE;AACLC,QAAAA,YAAY,EAAE;AADT,OAPI;AAUXC,MAAAA,YAAY,EAAE;AACZC,QAAAA,CAAC,EAAE,GADS;AAEZC,QAAAA,WAAW,EAAE,GAFD;AAGZC,QAAAA,MAAM,EAAE;AAHI;AAVH,KAdf;AA+BE,IAAA,MAAM,MA/BR;AAgCE,IAAA,KAAK,EAAE;AACLC,MAAAA,cAAc,EAAE,CADX;AAELL,MAAAA,YAAY,EAAE;AAFT,KAhCT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CAHF,EA0CE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,eAAe,EAAEvD,MAAM,CAAC6D,WAH1B;AAIE,IAAA,OAAO,EAAE,mBAAM;AACblB,MAAAA,UAAU,CAACmB,QAAX,CAAoB,SAApB,EAA+B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA/B;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CF,EAkDE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,OAAO,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAGrD,KAAvB;AAA8B,IAAA,YAAY,EAAGC,YAA7C;AAA2D,IAAA,cAAc,EAAGC,cAA5E;AAA4F,IAAA,WAAW,EAAGC,WAA1G;AACC,IAAA,UAAU,EAAGC,UADd;AAC0B,IAAA,IAAI,EAAGC,IADjC;AACuC,IAAA,IAAI,EAAGC,IAD9C;AACoD,IAAA,IAAI,EAAGC,IAD3D;AACiE,IAAA,IAAI,EAAGC,IADxE;AAC8E,IAAA,iBAAiB,EAAG,KADlG;AACyG,IAAA,iBAAiB,EAAG,IAD7H;AACmI,IAAA,KAAK,EAAGC,KAD3I;AAEC,IAAA,oBAAoB,EAAEC,oBAFvB;AAGC,IAAA,gBAAgB,EAAG,IAHpB;AAIC,IAAA,QAAQ,EAAG,IAJZ;AAKC,IAAA,SAAS,EAAG,KALb;AAMC,IAAA,SAAS,EAAG,KANb;AAOC,IAAA,SAAS,EAAG,KAPb;AAQC,IAAA,SAAS,EAAG,KARb;AASC,IAAA,WAAW,EAAG,IATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAlDF,CADW;AAAA,CAAb;;AAiEA,IAAM0C,OAAO,GAAGlC,UAAU,CAACC,MAAX,CAAkB;AAChCkC,EAAAA,SAAS,EAAE;AACThC,IAAAA,IAAI,EAAE,CADG;AAETG,IAAAA,cAAc,EAAE,QAFP;AAGTD,IAAAA,UAAU,EAAE,QAHH;AAITE,IAAAA,eAAe,EAAE;AAJR;AADqB,CAAlB,CAAhB;AAQAK,IAAI,CAACwB,SAAL,GAAiB;AACfvB,EAAAA,UAAU,EAAE7C,SAAS,CAACqE,KAAV,CAAgB;AAC1BL,IAAAA,QAAQ,EAAEhE,SAAS,CAACsE;AADM,GAAhB;AADG,CAAjB;AAMA1B,IAAI,CAAC2B,YAAL,GAAoB;AAClB1B,EAAAA,UAAU,EAAE;AAAEmB,IAAAA,QAAQ,EAAE;AAAA,aAAM,IAAN;AAAA;AAAZ;AADM,CAApB;AAIA,eAAepB,IAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  StyleSheet, Text, View, StatusBar, Dimensions\n} from 'react-native'\nimport Button from 'components/Button'\nimport { colors } from 'theme'\nimport { LineChart} from \"react-native-chart-kit\";\nimport Svg,{ Circle, Line, G, Path, Rect } from 'react-native-svg'\nimport * as d3 from \"d3\";\nimport * as scale from 'd3-scale';\nimport _ from 'lodash'\nimport { MultiLineChart } from 'react-native-d3multiline-chart'\n\nvar data2 =[ [{\n  \"y\": \"202\",\n  \"x\": 2000\n}, {\n  \"y\": \"215\",\n  \"x\": 2001\n}, {\n  \"y\": \"179\",\n  \"x\": 2002\n}, {\n  \"y\": \"199\",\n  \"x\": 2003\n}, {\n  \"y\": \"134\",\n  \"x\": 2003\n}, {\n  \"y\": \"176\",\n  \"x\": 2010\n}],\n[{\n  \"y\": \"152\",\n  \"x\": 2000\n}, {\n  \"y\": \"189\",\n  \"x\": 2002\n}, {\n  \"y\": \"179\",\n  \"x\": 2004\n}, {\n  \"y\": \"199\",\n  \"x\": 2006\n}, {\n  \"y\": \"134\",\n  \"x\": 2008\n}, {\n  \"y\": \"176\",\n  \"x\": 2010\n}]\n]\n\nlet leftAxisData = [\n134,144,154,164,174,184,194,204,215\n]\nlet bottomAxisData = [\n2000,2002,2004,2006,2008,2010\n]\nlet legendColor = ['#00b7d4','red']\nlet legendText = ['sales','year']\nlet minX= 2000, maxX= 2010\nlet minY= 134, maxY= 215\n\n//since there are only two lines\nvar Color = ['#00b7d4','red']\n//general data to represent ticks in y-axis and it doesn't take part in calculation\nlet bottomAxisDataToShow = [\n  \"Jan 2017\", \"Feb 2017\", \"Mar 2017\", \"Apr 2017\", \"May 2017\", \"Jun 2017\", \"Jul 2017\", \"Aug 2017\"\n]\n//general data to represent ticks in y-axis and it doesn't take part in calculation\nlet leftAxisDataToShow = [\n  \"10%\",\"20%\",\"30%\",\"40%\",\"50%\",\"60%\",\"70%\",\"80%\",\"90%\"\n]\nconst labels = [\n  'Label 1',\n  'Label 2',\n  'Label 3',\n  'Label 4',\n  'Label 5',\n  'Label 6',\n  ];\n  const data = [\n  Math.random() * 100,\n  Math.random() * 100,\n  Math.random() * 100,\n  Math.random() * 100,\n  Math.random() * 100,\n  Math.random() * 100,\n  ];\n  const data1 = [\n    Math.random() * 100,\n    Math.random() * 100,\n    Math.random() * 100,\n    Math.random() * 100,\n    Math.random() * 100,\n    Math.random() * 100,\n    ];\n\n  \n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.lightGrayPurple,\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n})\n\nconst Home = ({ navigation }) => (\n  <View style={styles.root}>\n    <StatusBar barStyle=\"light-content\" />\n    <Text style={styles.title}>Home</Text>\n    <View style={{alignItems: 'center'}}>\n            <LineChart\n              data={{\n                labels: labels,\n                datasets: [\n                  {\n                    data: data,\n                  },\n                  {\n                    data: data1,\n                  }\n                ],\n              }}\n              width={Dimensions.get('window').width - 50} // from react-native\n              height={220}\n              chartConfig={{\n                backgroundColor: '#e26a00',\n                backgroundGradientFrom: '#D9D9D9',\n                backgroundGradientTo: '#FFF',\n                decimalPlaces: 2, // optional, defaults to 2dp\n                color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n                labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n                style: {\n                  borderRadius: 16,\n                },\n                propsForDots: {\n                  r: '6',\n                  strokeWidth: '2',\n                  stroke: '#ffa726',\n                },\n                \n              }}\n              bezier\n              style={{\n                marginVertical: 5,\n                borderRadius: 15,\n              }}\n            />\n          </View>\n    <Button\n      title=\"Go to Details\"\n      color=\"white\"\n      backgroundColor={colors.lightPurple}\n      onPress={() => {\n        navigation.navigate('Details', { from: 'Home' })\n      }}\n    />\n    <View style={styles2.container}>\n       <MultiLineChart data= {data2} leftAxisData= {leftAxisData} bottomAxisData= {bottomAxisData} legendColor= {legendColor}\n        legendText= {legendText} minX= {minX} maxX= {maxX} minY= {minY} maxY= {maxY} scatterPlotEnable= {false} dataPointsVisible= {true} Color= {Color}\n        bottomAxisDataToShow={bottomAxisDataToShow}\n        circleLegendType= {true}\n        fillArea= {true}\n        yAxisGrid= {false}\n        xAxisGrid= {false}\n        hideXAxis= {false}\n        hideYAxis= {false}\n        inclindTick= {true} />\n     </View>\n  </View>\n)\nconst styles2 = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  }\n});\nHome.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func,\n  }),\n}\n\nHome.defaultProps = {\n  navigation: { navigate: () => null },\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}