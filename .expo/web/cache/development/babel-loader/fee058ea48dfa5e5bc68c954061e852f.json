{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\winston\\\\Documents\\\\react-native-boilerplate-master\\\\src\\\\scenes\\\\profile\\\\Profile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ExpandableCalendar, Timeline, CalendarProvider } from 'react-native-calendars';\nimport moment from 'moment';\nvar EVENTS = [{\n  start: '2017-09-06 22:30:00',\n  end: '2017-09-06 23:30:00',\n  title: 'Dr. Mariana Joseph',\n  summary: '3412 Piedmont Rd NE, GA 3032',\n  color: '#e6add8'\n}, {\n  start: '2017-09-07 00:30:00',\n  end: '2017-09-07 01:30:00',\n  title: 'Visit Grand Mother',\n  summary: 'Visit Grand Mother and bring some fruits.',\n  color: '#ade6d8'\n}, {\n  start: '2017-09-07 02:30:00',\n  end: '2017-09-07 03:20:00',\n  title: 'Meeting with Prof. Behjet Zuhaira',\n  summary: 'Meeting with Prof. Behjet at 130 in her office.',\n  color: '#e6add8'\n}, {\n  start: '2017-09-07 04:10:00',\n  end: '2017-09-07 04:40:00',\n  title: 'Tea Time with Dr. Hasan',\n  summary: 'Tea Time with Dr. Hasan, Talk about Project'\n}, {\n  start: '2017-09-07 01:05:00',\n  end: '2017-09-07 01:35:00',\n  title: 'Dr. Mariana Joseph',\n  summary: '3412 Piedmont Rd NE, GA 3032'\n}, {\n  start: '2017-09-07 14:30:00',\n  end: '2017-09-07 16:30:00',\n  title: 'Meeting Some Friends in ARMED',\n  summary: 'Arsalan, Hasnaat, Talha, Waleed, Bilal',\n  color: '#d8ade6'\n}, {\n  start: '2017-09-08 01:40:00',\n  end: '2017-09-08 02:25:00',\n  title: 'Meet Sir Khurram Iqbal',\n  summary: 'Computer Science Dept. Comsats Islamabad',\n  color: '#e6bcad'\n}, {\n  start: '2017-09-08 04:10:00',\n  end: '2017-09-08 04:40:00',\n  title: 'Tea Time with Colleagues',\n  summary: 'WeRplay'\n}, {\n  start: '2017-09-08 00:45:00',\n  end: '2017-09-08 01:45:00',\n  title: 'Lets Play Apex Legends',\n  summary: 'with Boys at Work'\n}, {\n  start: '2017-09-08 11:30:00',\n  end: '2017-09-08 12:30:00',\n  title: 'Dr. Mariana Joseph',\n  summary: '3412 Piedmont Rd NE, GA 3032'\n}, {\n  start: '2017-09-10 12:10:00',\n  end: '2017-09-10 13:45:00',\n  title: 'Merge Request to React Native Calendards',\n  summary: 'Merge Timeline Calendar to React Native Calendars'\n}];\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile() {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentDate: '2017-09-07'\n    };\n\n    _this.onDateChanged = function (date) {\n      _this.setState({\n        currentDate: date\n      });\n    };\n\n    _this.onMonthChange = function () {};\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item;\n\n      if (_.isEmpty(item)) {\n        return _this.renderEmptyItem();\n      }\n\n      return React.createElement(TouchableOpacity, {\n        style: styles.item,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.itemHourText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, item.hour), React.createElement(Text, {\n        style: styles.itemDurationText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, item.duration)), React.createElement(Text, {\n        style: styles.itemTitleText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, item.title), React.createElement(View, {\n        style: styles.itemButtonContainer,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, React.createElement(Button, {\n        title: 'Info',\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    _this.getTheme = function () {\n      var themeColor = '#0059ff';\n      var lightThemeColor = '#e6efff';\n      var disabledColor = '#a6acb1';\n      var black = '#20303c';\n      var white = '#ffffff';\n      return {\n        arrowColor: black,\n        arrowStyle: {\n          padding: 0\n        },\n        monthTextColor: black,\n        textMonthFontSize: 16,\n        textMonthFontFamily: 'HelveticaNeue',\n        textMonthFontWeight: 'bold',\n        textSectionTitleColor: black,\n        textDayHeaderFontSize: 12,\n        textDayHeaderFontFamily: 'HelveticaNeue',\n        textDayHeaderFontWeight: 'normal',\n        todayBackgroundColor: lightThemeColor,\n        todayTextColor: themeColor,\n        dayTextColor: themeColor,\n        textDayFontSize: 18,\n        textDayFontFamily: 'HelveticaNeue',\n        textDayFontWeight: '500',\n        textDayStyle: {\n          marginTop: Platform.OS === 'android' ? 2 : 4\n        },\n        selectedDayBackgroundColor: themeColor,\n        selectedDayTextColor: white,\n        textDisabledColor: disabledColor,\n        dotColor: themeColor,\n        selectedDotColor: white,\n        disabledDotColor: disabledColor,\n        dotStyle: {\n          marginTop: -2\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"renderEmptyItem\",\n    value: function renderEmptyItem() {\n      return React.createElement(View, {\n        style: styles.emptyItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.emptyItemText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, \"No Events Planned\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(CalendarProvider, {\n        date: this.state.currentDate,\n        onDateChanged: this.onDateChanged,\n        onMonthChange: this.onMonthChange,\n        theme: {\n          todayButtonTextColor: '#0059ff'\n        },\n        showTodayButton: true,\n        disabledOpacity: 0.6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, React.createElement(ExpandableCalendar, {\n        firstDay: 1,\n        theme: this.getTheme(),\n        leftArrowImageSource: require('.previous.png'),\n        rightArrowImageSource: require(\"../img/next.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }), React.createElement(Timeline, {\n        format24h: true,\n        eventTapped: function eventTapped(e) {\n          return e;\n        },\n        events: EVENTS.filter(function (event) {\n          return moment(event.start).isSame(_this2.state.currentDate, 'day');\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport { Profile as default };\nvar styles = StyleSheet.create({\n  calendar: {\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  section: {\n    backgroundColor: '#f0f4f7',\n    color: '#79838a'\n  },\n  item: {\n    padding: 20,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e8ecf0',\n    flexDirection: 'row'\n  },\n  itemHourText: {\n    color: 'black'\n  },\n  itemDurationText: {\n    color: 'grey',\n    fontSize: 12,\n    marginTop: 4,\n    marginLeft: 4\n  },\n  itemTitleText: {\n    color: 'black',\n    marginLeft: 16,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  itemButtonContainer: {\n    flex: 1,\n    alignItems: 'flex-end'\n  },\n  emptyItem: {\n    paddingLeft: 20,\n    height: 52,\n    justifyContent: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e8ecf0'\n  },\n  emptyItemText: {\n    color: '#79838a',\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/src/scenes/profile/Profile.js"],"names":["_","React","Component","ExpandableCalendar","Timeline","CalendarProvider","moment","EVENTS","start","end","title","summary","color","Profile","state","currentDate","onDateChanged","date","setState","onMonthChange","renderItem","item","isEmpty","renderEmptyItem","styles","itemHourText","hour","itemDurationText","duration","itemTitleText","itemButtonContainer","getTheme","themeColor","lightThemeColor","disabledColor","black","white","arrowColor","arrowStyle","padding","monthTextColor","textMonthFontSize","textMonthFontFamily","textMonthFontWeight","textSectionTitleColor","textDayHeaderFontSize","textDayHeaderFontFamily","textDayHeaderFontWeight","todayBackgroundColor","todayTextColor","dayTextColor","textDayFontSize","textDayFontFamily","textDayFontWeight","textDayStyle","marginTop","Platform","OS","selectedDayBackgroundColor","selectedDayTextColor","textDisabledColor","dotColor","selectedDotColor","disabledDotColor","dotStyle","emptyItem","emptyItemText","todayButtonTextColor","require","e","filter","event","isSame","StyleSheet","create","calendar","paddingLeft","paddingRight","section","backgroundColor","borderBottomWidth","borderBottomColor","flexDirection","fontSize","marginLeft","fontWeight","flex","alignItems","height","justifyContent"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, {Component} from 'react';\nimport {Platform, StyleSheet, View, Text, TouchableOpacity, Button} from 'react-native';\nimport {ExpandableCalendar, Timeline, CalendarProvider} from 'react-native-calendars';\nimport moment from 'moment';\n\nconst EVENTS = [\n  {\n    start: '2017-09-06 22:30:00',\n    end: '2017-09-06 23:30:00',\n    title: 'Dr. Mariana Joseph',\n    summary: '3412 Piedmont Rd NE, GA 3032',\n    color: '#e6add8'\n  },\n  {\n    start: '2017-09-07 00:30:00',\n    end: '2017-09-07 01:30:00',\n    title: 'Visit Grand Mother',\n    summary: 'Visit Grand Mother and bring some fruits.',\n    color: '#ade6d8'\n  },\n  {\n    start: '2017-09-07 02:30:00',\n    end: '2017-09-07 03:20:00',\n    title: 'Meeting with Prof. Behjet Zuhaira',\n    summary: 'Meeting with Prof. Behjet at 130 in her office.',\n    color: '#e6add8'\n  },\n  {\n    start: '2017-09-07 04:10:00',\n    end: '2017-09-07 04:40:00',\n    title: 'Tea Time with Dr. Hasan',\n    summary: 'Tea Time with Dr. Hasan, Talk about Project'\n  },\n  {\n    start: '2017-09-07 01:05:00',\n    end: '2017-09-07 01:35:00',\n    title: 'Dr. Mariana Joseph',\n    summary: '3412 Piedmont Rd NE, GA 3032'\n  },\n  {\n    start: '2017-09-07 14:30:00',\n    end: '2017-09-07 16:30:00',\n    title: 'Meeting Some Friends in ARMED',\n    summary: 'Arsalan, Hasnaat, Talha, Waleed, Bilal',\n    color: '#d8ade6'\n  },\n  {\n    start: '2017-09-08 01:40:00',\n    end: '2017-09-08 02:25:00',\n    title: 'Meet Sir Khurram Iqbal',\n    summary: 'Computer Science Dept. Comsats Islamabad',\n    color: '#e6bcad'\n  },\n  {\n    start: '2017-09-08 04:10:00',\n    end: '2017-09-08 04:40:00',\n    title: 'Tea Time with Colleagues',\n    summary: 'WeRplay'\n  },\n  {\n    start: '2017-09-08 00:45:00',\n    end: '2017-09-08 01:45:00',\n    title: 'Lets Play Apex Legends',\n    summary: 'with Boys at Work'\n  },\n  {\n    start: '2017-09-08 11:30:00',\n    end: '2017-09-08 12:30:00',\n    title: 'Dr. Mariana Joseph',\n    summary: '3412 Piedmont Rd NE, GA 3032'\n  },\n  {\n    start: '2017-09-10 12:10:00',\n    end: '2017-09-10 13:45:00',\n    title: 'Merge Request to React Native Calendards',\n    summary: 'Merge Timeline Calendar to React Native Calendars'\n  }\n];\n\nexport default class Profile extends Component {\n  state = {\n    currentDate: '2017-09-07'\n  };\n\n  onDateChanged = date => {\n    // console.warn('ExpandableCalendarScreen onDateChanged: ', date, updateSource);\n    // fetch and set data for date + week ahead\n    this.setState({currentDate: date});\n  };\n\n  onMonthChange = (/* month, updateSource */) => {\n    // console.warn('ExpandableCalendarScreen onMonthChange: ', month, updateSource);\n  };\n\n  renderEmptyItem() {\n    return (\n      <View style={styles.emptyItem}>\n        <Text style={styles.emptyItemText}>No Events Planned</Text>\n      </View>\n    );\n  }\n\n  renderItem = ({item}) => {\n    if (_.isEmpty(item)) {\n      return this.renderEmptyItem();\n    }\n\n    return (\n      <TouchableOpacity style={styles.item}>\n        <View>\n          <Text style={styles.itemHourText}>{item.hour}</Text>\n          <Text style={styles.itemDurationText}>{item.duration}</Text>\n        </View>\n        <Text style={styles.itemTitleText}>{item.title}</Text>\n        <View style={styles.itemButtonContainer}>\n          <Button title={'Info'} />\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  getTheme = () => {\n    const themeColor = '#0059ff';\n    const lightThemeColor = '#e6efff';\n    const disabledColor = '#a6acb1';\n    const black = '#20303c';\n    const white = '#ffffff';\n\n    return {\n      // arrows\n      arrowColor: black,\n      arrowStyle: {padding: 0},\n      // month\n      monthTextColor: black,\n      textMonthFontSize: 16,\n      textMonthFontFamily: 'HelveticaNeue',\n      textMonthFontWeight: 'bold',\n      // day names\n      textSectionTitleColor: black,\n      textDayHeaderFontSize: 12,\n      textDayHeaderFontFamily: 'HelveticaNeue',\n      textDayHeaderFontWeight: 'normal',\n      // today\n      todayBackgroundColor: lightThemeColor,\n      todayTextColor: themeColor,\n      // dates\n      dayTextColor: themeColor,\n      textDayFontSize: 18,\n      textDayFontFamily: 'HelveticaNeue',\n      textDayFontWeight: '500',\n      textDayStyle: {marginTop: Platform.OS === 'android' ? 2 : 4},\n      // selected date\n      selectedDayBackgroundColor: themeColor,\n      selectedDayTextColor: white,\n      // disabled date\n      textDisabledColor: disabledColor,\n      // dot (marked date)\n      dotColor: themeColor,\n      selectedDotColor: white,\n      disabledDotColor: disabledColor,\n      dotStyle: {marginTop: -2}\n    };\n  };\n\n  render() {\n    return (\n      <CalendarProvider\n        // date={ITEMS[0].title}\n        date={this.state.currentDate}\n        onDateChanged={this.onDateChanged}\n        onMonthChange={this.onMonthChange}\n        theme={{todayButtonTextColor: '#0059ff'}}\n        showTodayButton\n        disabledOpacity={0.6}\n        // todayBottomMargin={16}\n      >\n        <ExpandableCalendar\n          // horizontal={false}\n          // hideArrows\n          // disablePan\n          // hideKnob\n          // initialPosition={ExpandableCalendar.positions.OPEN}\n          firstDay={1}\n          // markedDates={this.getMarkedDates()} // {'2019-06-01': {marked: true}, '2019-06-02': {marked: true}, '2019-06-03': {marked: true}};\n          // markedDates={() => {}} // {'2019-06-01': {marked: true}, '2019-06-02': {marked: true}, '2019-06-03': {marked: true}};\n          theme={this.getTheme()}\n          leftArrowImageSource={require('.previous.png')}\n          rightArrowImageSource={require('../img/next.png')}\n          // calendarStyle={styles.calendar}\n          // headerStyle={styles.calendar} // for horizontal only\n          // disableWeekScroll\n        />\n        <Timeline\n          format24h={true}\n          eventTapped={e => e}\n          events={EVENTS.filter(event => moment(event.start).isSame(this.state.currentDate, 'day'))}\n          // scrollToFirst={true}\n          // start={0}\n          // end={24}\n        />\n      </CalendarProvider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  calendar: {\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  section: {\n    backgroundColor: '#f0f4f7',\n    color: '#79838a'\n  },\n  item: {\n    padding: 20,\n    backgroundColor: 'white',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e8ecf0',\n    flexDirection: 'row'\n  },\n  itemHourText: {\n    color: 'black'\n  },\n  itemDurationText: {\n    color: 'grey',\n    fontSize: 12,\n    marginTop: 4,\n    marginLeft: 4\n  },\n  itemTitleText: {\n    color: 'black',\n    marginLeft: 16,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  itemButtonContainer: {\n    flex: 1,\n    alignItems: 'flex-end'\n  },\n  emptyItem: {\n    paddingLeft: 20,\n    height: 52,\n    justifyContent: 'center',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e8ecf0'\n  },\n  emptyItemText: {\n    color: '#79838a',\n    fontSize: 14\n  }\n});"]},"metadata":{},"sourceType":"module"}