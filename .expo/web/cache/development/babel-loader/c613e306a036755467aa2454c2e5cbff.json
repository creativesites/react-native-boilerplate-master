{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\winston\\\\Documents\\\\react-native-boilerplate-master\\\\node_modules\\\\react-native-d3multiline-chart\\\\utils\\\\AnimatedSVGTransform\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport Matrix2D from \"../Matrix2D\";\n\nfunction _universal2axis(universal, axisX, axisY, defaultValue) {\n  var x;\n  var y;\n\n  if (typeof universal === 'object') {\n    x = universal.x;\n    y = universal.y;\n  } else if (typeof universal === 'number') {\n    x = y = universal;\n  }\n\n  axisX = +axisX;\n\n  if (!isNaN(axisX)) {\n    x = axisX;\n  }\n\n  axisY = +axisY;\n\n  if (!isNaN(axisY)) {\n    y = axisY;\n  }\n\n  return [x || defaultValue || 0, y || defaultValue || 0];\n}\n\nfunction universal2axis(key, nextProps, prevProps, defaultValue) {\n  var _universal2axis2 = _universal2axis(nextProps[key], nextProps[key + 'X'], nextProps[key + 'Y']),\n      _universal2axis3 = _slicedToArray(_universal2axis2, 2),\n      nextX = _universal2axis3[0],\n      nextY = _universal2axis3[1];\n\n  var _universal2axis4 = _universal2axis(prevProps[key], prevProps[key + 'X'], prevProps[key + 'Y'], defaultValue),\n      _universal2axis5 = _slicedToArray(_universal2axis4, 2),\n      prevX = _universal2axis5[0],\n      prevY = _universal2axis5[1];\n\n  return [nextX || prevX, nextY || prevY];\n}\n\nfunction createTransformObject(nextProps, prevProps) {\n  var _universal2axis6 = universal2axis('origin', nextProps, prevProps),\n      _universal2axis7 = _slicedToArray(_universal2axis6, 2),\n      originX = _universal2axis7[0],\n      originY = _universal2axis7[1];\n\n  var _universal2axis8 = universal2axis('scale', nextProps, prevProps, 1),\n      _universal2axis9 = _slicedToArray(_universal2axis8, 2),\n      scaleX = _universal2axis9[0],\n      scaleY = _universal2axis9[1];\n\n  var _universal2axis10 = universal2axis('skew', nextProps, prevProps),\n      _universal2axis11 = _slicedToArray(_universal2axis10, 2),\n      skewX = _universal2axis11[0],\n      skewY = _universal2axis11[1];\n\n  var _universal2axis12 = universal2axis('translate', nextProps, prevProps),\n      _universal2axis13 = _slicedToArray(_universal2axis12, 2),\n      translateX = _universal2axis13[0],\n      translateY = _universal2axis13[1];\n\n  var x = translateX || nextProps.x || prevProps.x || 0;\n  var y = translateY || nextProps.y || prevProps.y || 0;\n  var rotation = +nextProps.rotation || +nextProps.rotate || +prevProps.rotation || +prevProps.rotate || 0;\n  return {\n    rotation: rotation,\n    originX: originX,\n    originY: originY,\n    scaleX: scaleX,\n    scaleY: scaleY,\n    skewX: skewX,\n    skewY: skewY,\n    x: x,\n    y: y\n  };\n}\n\nvar pooledMatrix = new Matrix2D();\n\nfunction createTransformMatrix(props, transform) {\n  pooledMatrix.reset();\n  appendTransform(props);\n\n  if (transform) {\n    appendTransform(transform);\n  }\n\n  return pooledMatrix.toArray();\n}\n\nfunction appendTransform(transform) {\n  pooledMatrix.appendTransform(transform.x + transform.originX, transform.y + transform.originY, transform.scaleX, transform.scaleY, transform.rotation, transform.skewX, transform.skewY, transform.originX, transform.originY);\n}\n\nvar UNIVERSAL_KEYS = ['origin', 'scale', 'skew', 'translate'];\nvar KEYS = [].concat(UNIVERSAL_KEYS, ['originX', 'originY', 'scaleX', 'scaleY', 'skewX', 'skewY', 'translateX', 'translateY', 'x', 'y', 'rotation', 'rotate']);\nexport default function SvgTransformFix(WrappedComponent) {\n  var _temp;\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      keepXY = _ref.keepXY;\n\n  return _temp = function (_Component) {\n    _inherits(_temp, _Component);\n\n    var _super = _createSuper(_temp);\n\n    function _temp() {\n      var _this;\n\n      _classCallCheck(this, _temp);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.prevProps = pick(_this.props, KEYS);\n\n      _this.setNativeProps = function (props) {\n        if (KEYS.some(function (key, index) {\n          return props[key] != null;\n        })) {\n          var matrix = createTransformMatrix(createTransformObject(props, _this.prevProps));\n          var x, y;\n\n          if (keepXY) {\n            x = props.x && props.x.toString();\n            y = props.y && props.y.toString();\n          }\n\n          props = omit(props, KEYS);\n          props.matrix = matrix;\n          props.x = x;\n          props.y = y;\n          _this.prevProps = _extends(_this.prevProps, pick(props, KEYS));\n        }\n\n        _this._component && _this._component.setNativeProps(props);\n      };\n\n      return _this;\n    }\n\n    _createClass(_temp, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return React.createElement(WrappedComponent, _extends({\n          ref: function ref(component) {\n            return _this2._component = component;\n          }\n        }, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n\n    return _temp;\n  }(Component), _temp;\n}","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/node_modules/react-native-d3multiline-chart/utils/AnimatedSVGTransform/index.js"],"names":["React","Component","omit","pick","Matrix2D","_universal2axis","universal","axisX","axisY","defaultValue","x","y","isNaN","universal2axis","key","nextProps","prevProps","nextX","nextY","prevX","prevY","createTransformObject","originX","originY","scaleX","scaleY","skewX","skewY","translateX","translateY","rotation","rotate","pooledMatrix","createTransformMatrix","props","transform","reset","appendTransform","toArray","UNIVERSAL_KEYS","KEYS","SvgTransformFix","WrappedComponent","keepXY","setNativeProps","some","index","matrix","toString","_component","component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP;;AAUA,SAASC,eAAT,CAAyBC,SAAzB,EAAoCC,KAApC,EAA2CC,KAA3C,EAAkDC,YAAlD,EAAgE;AAC9D,MAAIC,CAAJ;AACA,MAAIC,CAAJ;;AACA,MAAI,OAAOL,SAAP,KAAqB,QAAzB,EAAmC;AACjCI,IAAAA,CAAC,GAAGJ,SAAS,CAACI,CAAd;AACAC,IAAAA,CAAC,GAAGL,SAAS,CAACK,CAAd;AACD,GAHD,MAGO,IAAI,OAAOL,SAAP,KAAqB,QAAzB,EAAmC;AACxCI,IAAAA,CAAC,GAAGC,CAAC,GAAGL,SAAR;AACD;;AAEDC,EAAAA,KAAK,GAAG,CAACA,KAAT;;AACA,MAAI,CAACK,KAAK,CAACL,KAAD,CAAV,EAAmB;AACjBG,IAAAA,CAAC,GAAGH,KAAJ;AACD;;AAEDC,EAAAA,KAAK,GAAG,CAACA,KAAT;;AACA,MAAI,CAACI,KAAK,CAACJ,KAAD,CAAV,EAAmB;AACjBG,IAAAA,CAAC,GAAGH,KAAJ;AACD;;AAED,SAAO,CAACE,CAAC,IAAID,YAAL,IAAqB,CAAtB,EAAyBE,CAAC,IAAIF,YAAL,IAAqB,CAA9C,CAAP;AACD;;AAED,SAASI,cAAT,CAAwBC,GAAxB,EAA6BC,SAA7B,EAAwCC,SAAxC,EAAmDP,YAAnD,EAAiE;AAAA,yBAC1CJ,eAAe,CAACU,SAAS,CAACD,GAAD,CAAV,EAAiBC,SAAS,CAACD,GAAG,GAAG,GAAP,CAA1B,EAAuCC,SAAS,CAACD,GAAG,GAAG,GAAP,CAAhD,CAD2B;AAAA;AAAA,MAC1DG,KAD0D;AAAA,MACnDC,KADmD;;AAAA,yBAE1Cb,eAAe,CAACW,SAAS,CAACF,GAAD,CAAV,EAAiBE,SAAS,CAACF,GAAG,GAAG,GAAP,CAA1B,EAAuCE,SAAS,CAACF,GAAG,GAAG,GAAP,CAAhD,EAA6DL,YAA7D,CAF2B;AAAA;AAAA,MAE1DU,KAF0D;AAAA,MAEnDC,KAFmD;;AAG/D,SAAO,CAACH,KAAK,IAAIE,KAAV,EAAiBD,KAAK,IAAIE,KAA1B,CAAP;AACD;;AAED,SAASC,qBAAT,CAA+BN,SAA/B,EAA0CC,SAA1C,EAAqD;AAAA,yBACxBH,cAAc,CAAC,QAAD,EAAWE,SAAX,EAAsBC,SAAtB,CADU;AAAA;AAAA,MAC5CM,OAD4C;AAAA,MACnCC,OADmC;;AAAA,yBAE1BV,cAAc,CAAC,OAAD,EAAUE,SAAV,EAAqBC,SAArB,EAAgC,CAAhC,CAFY;AAAA;AAAA,MAE5CQ,MAF4C;AAAA,MAEpCC,MAFoC;;AAAA,0BAG5BZ,cAAc,CAAC,MAAD,EAASE,SAAT,EAAoBC,SAApB,CAHc;AAAA;AAAA,MAG5CU,KAH4C;AAAA,MAGrCC,KAHqC;;AAAA,0BAIlBd,cAAc,CAAC,WAAD,EAAcE,SAAd,EAAyBC,SAAzB,CAJI;AAAA;AAAA,MAI5CY,UAJ4C;AAAA,MAIhCC,UAJgC;;AAKnD,MAAMnB,CAAC,GAAGkB,UAAU,IAAIb,SAAS,CAACL,CAAxB,IAA6BM,SAAS,CAACN,CAAvC,IAA4C,CAAtD;AACA,MAAMC,CAAC,GAAGkB,UAAU,IAAId,SAAS,CAACJ,CAAxB,IAA6BK,SAAS,CAACL,CAAvC,IAA4C,CAAtD;AACA,MAAMmB,QAAQ,GAAG,CAACf,SAAS,CAACe,QAAX,IAAuB,CAACf,SAAS,CAACgB,MAAlC,IAA4C,CAACf,SAAS,CAACc,QAAvD,IAAmE,CAACd,SAAS,CAACe,MAA9E,IAAwF,CAAzG;AACA,SAAO;AACLD,IAAAA,QAAQ,EAARA,QADK;AAELR,IAAAA,OAAO,EAAPA,OAFK;AAGLC,IAAAA,OAAO,EAAPA,OAHK;AAILC,IAAAA,MAAM,EAANA,MAJK;AAKLC,IAAAA,MAAM,EAANA,MALK;AAMLC,IAAAA,KAAK,EAALA,KANK;AAOLC,IAAAA,KAAK,EAALA,KAPK;AAQLjB,IAAAA,CAAC,EAADA,CARK;AASLC,IAAAA,CAAC,EAADA;AATK,GAAP;AAWD;;AAED,IAAIqB,YAAY,GAAG,IAAI5B,QAAJ,EAAnB;;AAEA,SAAS6B,qBAAT,CAA+BC,KAA/B,EAAsCC,SAAtC,EAAiD;AAC/CH,EAAAA,YAAY,CAACI,KAAb;AACAC,EAAAA,eAAe,CAACH,KAAD,CAAf;;AAEA,MAAIC,SAAJ,EAAe;AACbE,IAAAA,eAAe,CAACF,SAAD,CAAf;AACD;;AAED,SAAOH,YAAY,CAACM,OAAb,EAAP;AACD;;AAED,SAASD,eAAT,CAAyBF,SAAzB,EAAoC;AAClCH,EAAAA,YAAY,CACTK,eADH,CAEEF,SAAS,CAACzB,CAAV,GAAcyB,SAAS,CAACb,OAF1B,EAGEa,SAAS,CAACxB,CAAV,GAAcwB,SAAS,CAACZ,OAH1B,EAIEY,SAAS,CAACX,MAJZ,EAIoBW,SAAS,CAACV,MAJ9B,EAKEU,SAAS,CAACL,QALZ,EAMEK,SAAS,CAACT,KANZ,EAOES,SAAS,CAACR,KAPZ,EAQEQ,SAAS,CAACb,OARZ,EASEa,SAAS,CAACZ,OATZ;AAWD;;AAED,IAAMgB,cAAc,GAAG,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,EAA4B,WAA5B,CAAvB;AACA,IAAMC,IAAI,aAAOD,cAAP,GAAuB,SAAvB,EAAkC,SAAlC,EAA6C,QAA7C,EAAuD,QAAvD,EAAiE,OAAjE,EAA0E,OAA1E,EAAmF,YAAnF,EAAiG,YAAjG,EAA+G,GAA/G,EAAoH,GAApH,EAAyH,UAAzH,EAAqI,QAArI,EAAV;AAEA,eAAe,SAASE,eAAT,CAAyBC,gBAAzB,EAA4D;AAAA;;AAAA,iFAAJ,EAAI;AAAA,MAAfC,MAAe,QAAfA,MAAe;;AACzE;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,YACE3B,SADF,GACcb,IAAI,CAAC,MAAK+B,KAAN,EAAaM,IAAb,CADlB;;AAAA,YAEEI,cAFF,GAEmB,UAACV,KAAD,EAAW;AAE1B,YAAIM,IAAI,CAACK,IAAL,CAAU,UAAC/B,GAAD,EAAMgC,KAAN;AAAA,iBAAgBZ,KAAK,CAACpB,GAAD,CAAL,IAAc,IAA9B;AAAA,SAAV,CAAJ,EAAmD;AACjD,cAAMiC,MAAM,GAAGd,qBAAqB,CAACZ,qBAAqB,CAACa,KAAD,EAAQ,MAAKlB,SAAb,CAAtB,CAApC;AACA,cAAIN,CAAJ,EAAOC,CAAP;;AAEA,cAAIgC,MAAJ,EAAY;AACVjC,YAAAA,CAAC,GAAGwB,KAAK,CAACxB,CAAN,IAAWwB,KAAK,CAACxB,CAAN,CAAQsC,QAAR,EAAf;AACArC,YAAAA,CAAC,GAAGuB,KAAK,CAACvB,CAAN,IAAWuB,KAAK,CAACvB,CAAN,CAAQqC,QAAR,EAAf;AACD;;AAEDd,UAAAA,KAAK,GAAGhC,IAAI,CAACgC,KAAD,EAAQM,IAAR,CAAZ;AACAN,UAAAA,KAAK,CAACa,MAAN,GAAeA,MAAf;AACAb,UAAAA,KAAK,CAACxB,CAAN,GAAUA,CAAV;AACAwB,UAAAA,KAAK,CAACvB,CAAN,GAAUA,CAAV;AAEA,gBAAKK,SAAL,GAAiB,SAAc,MAAKA,SAAnB,EAA8Bb,IAAI,CAAC+B,KAAD,EAAQM,IAAR,CAAlC,CAAjB;AACD;;AACD,cAAKS,UAAL,IAAmB,MAAKA,UAAL,CAAgBL,cAAhB,CAA+BV,KAA/B,CAAnB;AACD,OArBH;;AAAA;AAAA;;AAAA;AAAA;AAAA,aAsBE,kBAAS;AAAA;;AACP,eACE,oBAAC,gBAAD;AACE,UAAA,GAAG,EAAE,aAAAgB,SAAS;AAAA,mBAAK,MAAI,CAACD,UAAL,GAAkBC,SAAvB;AAAA;AADhB,WAEM,KAAKhB,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD;AA7BH;;AAAA;AAAA,IAAqBjC,SAArB;AA+BD","sourcesContent":["import React, { Component } from 'react';\r\nimport omit from 'lodash/omit';\r\nimport pick from 'lodash/pick';\r\nimport Matrix2D from '../Matrix2D';\r\n\r\n/**\r\n * Problem: Animating transform props is not easy\r\n * Solution: Use Animated.ValueXY in universal props, create matrix when ever transform props change, use setNativeProps\r\n * BUG: Using Animated.ValueXY does not work for some reason\r\n */\r\n\r\n// https://github.com/react-native-community/react-native-svg/blob/master/lib/extract/extractTransform.js\r\n// modified to deal with nextProps and prevProps situations with both static props on this.props and dynamic props passing through setNativeProps\r\nfunction _universal2axis(universal, axisX, axisY, defaultValue) {\r\n  let x;\r\n  let y;\r\n  if (typeof universal === 'object') {\r\n    x = universal.x;\r\n    y = universal.y;\r\n  } else if (typeof universal === 'number') {\r\n    x = y = universal;\r\n  }\r\n\r\n  axisX = +axisX;\r\n  if (!isNaN(axisX)) {\r\n    x = axisX;\r\n  }\r\n\r\n  axisY = +axisY;\r\n  if (!isNaN(axisY)) {\r\n    y = axisY;\r\n  }\r\n\r\n  return [x || defaultValue || 0, y || defaultValue || 0];\r\n}\r\n\r\nfunction universal2axis(key, nextProps, prevProps, defaultValue) {\r\n  let [nextX, nextY] = _universal2axis(nextProps[key], nextProps[key + 'X'], nextProps[key + 'Y']);\r\n  let [prevX, prevY] = _universal2axis(prevProps[key], prevProps[key + 'X'], prevProps[key + 'Y'], defaultValue);\r\n  return [nextX || prevX, nextY || prevY];\r\n}\r\n\r\nfunction createTransformObject(nextProps, prevProps) {\r\n  const [originX, originY] = universal2axis('origin', nextProps, prevProps);\r\n  const [scaleX, scaleY] = universal2axis('scale', nextProps, prevProps, 1);\r\n  const [skewX, skewY] = universal2axis('skew', nextProps, prevProps);\r\n  const [translateX, translateY] = universal2axis('translate', nextProps, prevProps);\r\n  const x = translateX || nextProps.x || prevProps.x || 0;\r\n  const y = translateY || nextProps.y || prevProps.y || 0;\r\n  const rotation = +nextProps.rotation || +nextProps.rotate || +prevProps.rotation || +prevProps.rotate || 0;\r\n  return {\r\n    rotation,\r\n    originX,\r\n    originY,\r\n    scaleX,\r\n    scaleY,\r\n    skewX,\r\n    skewY,\r\n    x,\r\n    y\r\n  };\r\n}\r\n\r\nlet pooledMatrix = new Matrix2D();\r\n\r\nfunction createTransformMatrix(props, transform) {\r\n  pooledMatrix.reset();\r\n  appendTransform(props);\r\n\r\n  if (transform) {\r\n    appendTransform(transform);\r\n  }\r\n\r\n  return pooledMatrix.toArray();\r\n}\r\n\r\nfunction appendTransform(transform) {\r\n  pooledMatrix\r\n    .appendTransform(\r\n    transform.x + transform.originX,\r\n    transform.y + transform.originY,\r\n    transform.scaleX, transform.scaleY,\r\n    transform.rotation,\r\n    transform.skewX,\r\n    transform.skewY,\r\n    transform.originX,\r\n    transform.originY\r\n  );\r\n}\r\n\r\nconst UNIVERSAL_KEYS = ['origin', 'scale', 'skew', 'translate'];\r\nconst KEYS = [...UNIVERSAL_KEYS, 'originX', 'originY', 'scaleX', 'scaleY', 'skewX', 'skewY', 'translateX', 'translateY', 'x', 'y', 'rotation', 'rotate'];\r\n\r\nexport default function SvgTransformFix(WrappedComponent, { keepXY } = {}) {\r\n  return class extends Component {\r\n    prevProps = pick(this.props, KEYS)\r\n    setNativeProps = (props) => {\r\n      // if some transform key exists in props, create a new matrix\r\n      if (KEYS.some((key, index) => props[key] != null)) {\r\n        const matrix = createTransformMatrix(createTransformObject(props, this.prevProps));\r\n        let x, y;\r\n        // some components like rect need these still\r\n        if (keepXY) {\r\n          x = props.x && props.x.toString();\r\n          y = props.y && props.y.toString();\r\n        }\r\n        // remove transform props since they are moved into matrix prop\r\n        props = omit(props, KEYS);\r\n        props.matrix = matrix;\r\n        props.x = x;\r\n        props.y = y;\r\n        // cache dynamic prop values since you need them to generate an accurate matrix\r\n        this.prevProps = Object.assign(this.prevProps, pick(props, KEYS));\r\n      }\r\n      this._component && this._component.setNativeProps(props);\r\n    }\r\n    render() {\r\n      return (\r\n        <WrappedComponent\r\n          ref={component => (this._component = component)}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}