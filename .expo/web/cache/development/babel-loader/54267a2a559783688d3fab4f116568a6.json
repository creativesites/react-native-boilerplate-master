{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\winston\\\\Documents\\\\react-native-boilerplate-master\\\\src\\\\scenes\\\\profile\\\\Profile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport React, { useState, Fragment } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Calendar } from 'react-native-calendars';\n\nvar testIDs = require(\"./testIDs\");\n\nvar Profile = function Profile() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected1 = _useState4[0],\n      setSelected1 = _useState4[1];\n\n  var onDayPress = function onDayPress(day) {\n    setSelected(day.dateString);\n  };\n\n  var onDayPress1 = function onDayPress1(day) {\n    setSelected1(day.dateString);\n  };\n\n  var getDisabledDates = function getDisabledDates(startDate, endDate, daysToDisable) {\n    var disabledDates = {};\n    var start = moment(startDate);\n    var end = moment(endDate);\n\n    for (var m = moment(start); m.diff(end, 'days') <= 0; m.add(1, 'days')) {\n      if (_.includes(daysToDisable, m.weekday())) {\n        disabledDates[m.format('YYYY-MM-DD')] = {\n          disabled: true\n        };\n      }\n    }\n\n    return disabledDates;\n  };\n\n  var renderCalendarWithSelectableDate = function renderCalendarWithSelectableDate() {\n    var _ref;\n\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Calendar with selectable date\"), React.createElement(Calendar, {\n      testID: testIDs.calendars.FIRST,\n      current: '2020-02-02',\n      style: styles.calendar,\n      onDayPress: onDayPress,\n      markedDates: (_ref = {}, _defineProperty(_ref, selected, {\n        selected: true,\n        disableTouchEvent: true,\n        selectedColor: 'orange',\n        selectedTextColor: 'red'\n      }), _defineProperty(_ref, '2020-02-07', {\n        startingDay: true,\n        color: '#50cebb'\n      }), _defineProperty(_ref, '2020-02-07', {\n        marked: true,\n        Dotolor: '#50cebb'\n      }), _defineProperty(_ref, '2020-02-09', {\n        endingDay: true,\n        color: '#50cebb'\n      }), _ref),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithWeekNumbers = function renderCalendarWithWeekNumbers() {\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Calendar with week numbers\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      hideExtraDays: true,\n      showWeekNumbers: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithMinAndMaxDates = function renderCalendarWithMinAndMaxDates() {\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Calendar with min and max dates\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      hideExtraDays: true,\n      current: '2012-05-16',\n      minDate: '2012-05-10',\n      maxDate: '2012-05-20',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithMarkedDatesAndHiddenArrows = function renderCalendarWithMarkedDatesAndHiddenArrows() {\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Calendar with marked dates and hidden arrows\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      current: '2012-05-16',\n      hideExtraDays: true,\n      disableAllTouchEventsForDisabledDays: true,\n      firstDay: 1,\n      markedDates: {\n        '2012-05-23': {\n          selected: true,\n          marked: true,\n          disableTouchEvent: true\n        },\n        '2012-05-24': {\n          selected: true,\n          marked: true,\n          dotColor: 'red'\n        },\n        '2012-05-25': {\n          marked: true,\n          dotColor: 'red',\n          disableTouchEvent: true\n        },\n        '2012-05-26': {\n          marked: true\n        },\n        '2012-05-27': {\n          disabled: true,\n          activeOpacity: 0,\n          disableTouchEvent: false\n        }\n      },\n      hideArrows: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithMultiDotMarking = function renderCalendarWithMultiDotMarking() {\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Calendar with multi-dot marking\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      current: '2012-05-16',\n      markingType: 'multi-dot',\n      markedDates: {\n        '2012-05-08': {\n          selected: true,\n          dots: [{\n            key: 'vacation',\n            color: 'blue',\n            selectedDotColor: 'red'\n          }, {\n            key: 'massage',\n            color: 'red',\n            selectedDotColor: 'white'\n          }]\n        },\n        '2012-05-09': {\n          disabled: true,\n          dots: [{\n            key: 'vacation',\n            color: 'green',\n            selectedDotColor: 'red'\n          }, {\n            key: 'massage',\n            color: 'red',\n            selectedDotColor: 'green'\n          }]\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithPeriodMarkingAndSpinner = function renderCalendarWithPeriodMarkingAndSpinner() {\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, \"Calendar with period marking and spinner\"), React.createElement(Calendar, {\n      current: '2012-05-16',\n      minDate: '2012-05-10',\n      displayLoadingIndicator: true,\n      markingType: 'period',\n      theme: {\n        calendarBackground: '#333248',\n        textSectionTitleColor: 'white',\n        textSectionTitleDisabledColor: 'gray',\n        dayTextColor: 'red',\n        todayTextColor: 'white',\n        selectedDayTextColor: 'white',\n        monthTextColor: 'white',\n        indicatorColor: 'white',\n        selectedDayBackgroundColor: '#333248',\n        arrowColor: 'white',\n        'stylesheet.calendar.header': {\n          week: {\n            marginTop: 30,\n            marginHorizontal: 12,\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          }\n        }\n      },\n      markedDates: {\n        '2012-05-17': {\n          disabled: true\n        },\n        '2012-05-08': {\n          textColor: 'pink'\n        },\n        '2012-05-09': {\n          textColor: 'pink'\n        },\n        '2012-05-14': {\n          startingDay: true,\n          color: 'green',\n          endingDay: true\n        },\n        '2012-05-21': {\n          startingDay: true,\n          color: 'green'\n        },\n        '2012-05-22': {\n          endingDay: true,\n          color: 'gray'\n        },\n        '2012-05-24': {\n          startingDay: true,\n          color: 'gray'\n        },\n        '2012-05-25': {\n          color: 'gray'\n        },\n        '2012-05-26': {\n          endingDay: true,\n          color: 'gray'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithPeriodMarkingAndDotMarking = function renderCalendarWithPeriodMarkingAndDotMarking() {\n    var _objectSpread2;\n\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, \"Calendar with period marking and dot marking\"), React.createElement(Calendar, {\n      testID: testIDs.calendars.FIRST,\n      current: '2012-05-16',\n      minDate: '2012-05-01',\n      onDayPress: onDayPress,\n      disabledDaysIndexes: [0, 6],\n      markingType: 'period',\n      markedDates: _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, selected, {\n        selected: true,\n        disableTouchEvent: true,\n        selectedColor: 'orange',\n        selectedTextColor: 'red'\n      }), _defineProperty(_objectSpread2, '2012-05-16', {\n        marked: true,\n        dotColor: '#50cebb'\n      }), _defineProperty(_objectSpread2, '2012-05-21', {\n        startingDay: true,\n        color: '#50cebb',\n        textColor: 'white'\n      }), _defineProperty(_objectSpread2, '2012-05-22', {\n        color: '#70d7c7',\n        customTextStyle: {\n          color: '#FFFAAA',\n          fontWeight: '700'\n        }\n      }), _defineProperty(_objectSpread2, '2012-05-23', {\n        color: '#70d7c7',\n        textColor: 'white',\n        marked: true,\n        dotColor: 'white'\n      }), _defineProperty(_objectSpread2, '2012-05-24', {\n        color: '#70d7c7',\n        textColor: 'white'\n      }), _defineProperty(_objectSpread2, '2012-05-25', {\n        endingDay: true,\n        color: '#50cebb',\n        textColor: 'white',\n        customContainerStyle: {\n          borderTopRightRadius: 5,\n          borderBottomRightRadius: 5\n        }\n      }), _objectSpread2), getDisabledDates('2012-05-01', '2012-05-30', [0, 6])),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithMultiPeriodMarking = function renderCalendarWithMultiPeriodMarking() {\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, \"Calendar with multi-period marking\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      current: '2012-05-16',\n      markingType: 'multi-period',\n      markedDates: {\n        '2012-05-16': {\n          periods: [{\n            startingDay: true,\n            endingDay: false,\n            color: 'green'\n          }, {\n            startingDay: true,\n            endingDay: false,\n            color: 'orange'\n          }]\n        },\n        '2012-05-17': {\n          periods: [{\n            startingDay: false,\n            endingDay: true,\n            color: 'green'\n          }, {\n            startingDay: false,\n            endingDay: true,\n            color: 'orange'\n          }, {\n            startingDay: true,\n            endingDay: false,\n            color: 'pink'\n          }]\n        },\n        '2012-05-18': {\n          periods: [{\n            startingDay: true,\n            endingDay: true,\n            color: 'orange'\n          }, {\n            color: 'transparent'\n          }, {\n            startingDay: false,\n            endingDay: false,\n            color: 'pink'\n          }]\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithCustomMarkingType = function renderCalendarWithCustomMarkingType() {\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    }, \"Custom calendar with custom marking type\"), React.createElement(Calendar, {\n      style: styles.calendar,\n      hideExtraDays: true,\n      current: '2018-03-01',\n      minDate: '2018-03-01',\n      markingType: 'custom',\n      markedDates: {\n        '2018-03-01': {\n          customStyles: {\n            container: {\n              backgroundColor: 'white',\n              elevation: 2\n            },\n            text: {\n              color: 'red'\n            }\n          }\n        },\n        '2018-03-08': {\n          selected: true\n        },\n        '2018-03-09': {\n          customStyles: {\n            container: {\n              backgroundColor: 'red',\n              elevation: 4\n            },\n            text: {\n              color: 'white'\n            }\n          }\n        },\n        '2018-03-14': {\n          customStyles: {\n            container: {\n              backgroundColor: 'green'\n            },\n            text: {\n              color: 'white'\n            }\n          }\n        },\n        '2018-03-15': {\n          customStyles: {\n            container: {\n              backgroundColor: 'black',\n              elevation: 2\n            },\n            text: {\n              color: 'yellow'\n            }\n          }\n        },\n        '2018-03-21': {\n          disabled: true\n        },\n        '2018-03-28': {\n          customStyles: {\n            text: {\n              color: 'black',\n              fontWeight: 'bold'\n            }\n          }\n        },\n        '2018-03-30': {\n          customStyles: {\n            container: {\n              backgroundColor: 'pink',\n              elevation: 4,\n              borderColor: 'purple',\n              borderWidth: 5\n            },\n            text: {\n              marginTop: 3,\n              fontSize: 11,\n              color: 'black'\n            }\n          }\n        },\n        '2018-03-31': {\n          customStyles: {\n            container: {\n              backgroundColor: 'orange',\n              borderRadius: 0\n            }\n          }\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithCustomDay = function renderCalendarWithCustomDay() {\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }\n    }, \"Calendar with custom day component\"), React.createElement(Calendar, {\n      style: [styles.calendar, {\n        height: 250,\n        borderBottomWidth: 1,\n        borderBottomColor: 'lightgrey'\n      }],\n      dayComponent: function dayComponent(_ref2) {\n        var date = _ref2.date,\n            state = _ref2.state;\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            color: state === 'disabled' ? 'gray' : 'purple'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }\n        }, date.day));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderCalendarWithCustomHeader = function renderCalendarWithCustomHeader() {\n    var CustomHeader = React.forwardRef(function (props, ref) {\n      return React.createElement(View, _extends({\n        ref: ref\n      }, props, {\n        style: {\n          backgroundColor: '#FCC',\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          marginHorizontal: -4,\n          padding: 8\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }\n      }, \"This is a custom header!\"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return console.warn('Tapped!');\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }\n      }, \"Tap Me\")));\n    });\n    return React.createElement(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }\n    }, \"Calendar with custom header component\"), React.createElement(Calendar, {\n      testID: testIDs.calendars.LAST,\n      style: [styles.calendar, {\n        height: 250,\n        borderBottomWidth: 1,\n        borderBottomColor: 'lightgrey'\n      }],\n      customHeader: CustomHeader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    testID: testIDs.calendars.CONTAINER,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 5\n    }\n  }, renderCalendarWithSelectableDate(), renderCalendarWithWeekNumbers(), renderCalendarWithMinAndMaxDates(), renderCalendarWithMarkedDatesAndHiddenArrows(), renderCalendarWithMultiDotMarking(), renderCalendarWithPeriodMarkingAndSpinner(), renderCalendarWithPeriodMarkingAndDotMarking(), renderCalendarWithMultiPeriodMarking(), renderCalendarWithCustomMarkingType(), renderCalendarWithCustomDay(), renderCalendarWithCustomHeader());\n};\n\nexport default Profile;\nvar styles = StyleSheet.create({\n  calendar: {\n    marginBottom: 10\n  },\n  text: {\n    textAlign: 'center',\n    padding: 10,\n    backgroundColor: 'lightgrey',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/src/scenes/profile/Profile.js"],"names":["_","moment","React","useState","Fragment","Calendar","testIDs","require","Profile","selected","setSelected","selected1","setSelected1","onDayPress","day","dateString","onDayPress1","getDisabledDates","startDate","endDate","daysToDisable","disabledDates","start","end","m","diff","add","includes","weekday","format","disabled","renderCalendarWithSelectableDate","styles","text","calendars","FIRST","calendar","disableTouchEvent","selectedColor","selectedTextColor","startingDay","color","marked","Dotolor","endingDay","renderCalendarWithWeekNumbers","renderCalendarWithMinAndMaxDates","renderCalendarWithMarkedDatesAndHiddenArrows","dotColor","activeOpacity","renderCalendarWithMultiDotMarking","dots","key","selectedDotColor","renderCalendarWithPeriodMarkingAndSpinner","calendarBackground","textSectionTitleColor","textSectionTitleDisabledColor","dayTextColor","todayTextColor","selectedDayTextColor","monthTextColor","indicatorColor","selectedDayBackgroundColor","arrowColor","week","marginTop","marginHorizontal","flexDirection","justifyContent","textColor","renderCalendarWithPeriodMarkingAndDotMarking","customTextStyle","fontWeight","customContainerStyle","borderTopRightRadius","borderBottomRightRadius","renderCalendarWithMultiPeriodMarking","periods","renderCalendarWithCustomMarkingType","customStyles","container","backgroundColor","elevation","borderColor","borderWidth","fontSize","borderRadius","renderCalendarWithCustomDay","height","borderBottomWidth","borderBottomColor","date","state","textAlign","renderCalendarWithCustomHeader","CustomHeader","forwardRef","props","ref","padding","console","warn","LAST","CONTAINER","StyleSheet","create","marginBottom"],"mappings":"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","sourcesContent":["import _ from 'lodash';\r\nimport moment from 'moment';\r\nimport React, {useState, Fragment} from 'react';\r\nimport {StyleSheet, View, ScrollView, Text, TouchableOpacity} from 'react-native';\r\nimport {Calendar} from 'react-native-calendars';\r\n//import Calendar from 'react-native-calendar-select';\r\n\r\nconst testIDs = require('./testIDs');\r\n\r\nconst Profile = () => {\r\n  const [selected, setSelected] = useState('');\r\n  const [selected1, setSelected1] = useState('');\r\n\r\n  const onDayPress = day => {\r\n    setSelected(day.dateString);\r\n  };\r\n  const onDayPress1 = day => {\r\n    setSelected1(day.dateString);\r\n  };\r\n\r\n  const getDisabledDates = (startDate, endDate, daysToDisable) => {\r\n    const disabledDates = {};\r\n    const start = moment(startDate);\r\n    const end = moment(endDate);\r\n\r\n    for (let m = moment(start); m.diff(end, 'days') <= 0; m.add(1, 'days')) {\r\n      if (_.includes(daysToDisable, m.weekday())) {\r\n        disabledDates[m.format('YYYY-MM-DD')] = {disabled: true};\r\n      }\r\n    }\r\n    return disabledDates;\r\n  };\r\n\r\n  const renderCalendarWithSelectableDate = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with selectable date</Text>\r\n        <Calendar\r\n          testID={testIDs.calendars.FIRST}\r\n          \r\n          current={'2020-02-02'}\r\n          style={styles.calendar}\r\n          onDayPress={onDayPress}\r\n          markedDates={{\r\n            [selected]: {\r\n              selected: true,\r\n              disableTouchEvent: true,\r\n              selectedColor: 'orange',\r\n              selectedTextColor: 'red'\r\n            },\r\n            '2020-02-07': {startingDay: true, color: '#50cebb'},\r\n            '2020-02-07': {marked: true, Dotolor: '#50cebb'},\r\n            '2020-02-09': {endingDay: true, color: '#50cebb'}\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithWeekNumbers = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with week numbers</Text>\r\n        <Calendar style={styles.calendar} hideExtraDays showWeekNumbers />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithMinAndMaxDates = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with min and max dates</Text>\r\n        <Calendar \r\n          style={styles.calendar} \r\n          hideExtraDays \r\n          current={'2012-05-16'}\r\n          minDate={'2012-05-10'}\r\n          maxDate={'2012-05-20'}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithMarkedDatesAndHiddenArrows = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with marked dates and hidden arrows</Text>\r\n        <Calendar\r\n          style={styles.calendar}\r\n          current={'2012-05-16'}\r\n          hideExtraDays\r\n          disableAllTouchEventsForDisabledDays\r\n          firstDay={1}\r\n          markedDates={{\r\n            '2012-05-23': {selected: true, marked: true, disableTouchEvent: true},\r\n            '2012-05-24': {selected: true, marked: true, dotColor: 'red'},\r\n            '2012-05-25': {marked: true, dotColor: 'red', disableTouchEvent: true},\r\n            '2012-05-26': {marked: true},\r\n            '2012-05-27': {disabled: true, activeOpacity: 0, disableTouchEvent: false}\r\n          }}\r\n          hideArrows={true}\r\n          // disabledByDefault={true}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithMultiDotMarking = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with multi-dot marking</Text>\r\n        <Calendar\r\n          style={styles.calendar}\r\n          current={'2012-05-16'}\r\n          markingType={'multi-dot'}\r\n          markedDates={{\r\n            '2012-05-08': {\r\n              selected: true,\r\n              dots: [\r\n                {key: 'vacation', color: 'blue', selectedDotColor: 'red'},\r\n                {key: 'massage', color: 'red', selectedDotColor: 'white'}\r\n              ]\r\n            },\r\n            '2012-05-09': {\r\n              disabled: true,\r\n              dots: [\r\n                {key: 'vacation', color: 'green', selectedDotColor: 'red'},\r\n                {key: 'massage', color: 'red', selectedDotColor: 'green'}\r\n              ]\r\n            }\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithPeriodMarkingAndSpinner = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with period marking and spinner</Text>\r\n        <Calendar\r\n          // style={styles.calendar}\r\n          current={'2012-05-16'}\r\n          minDate={'2012-05-10'}\r\n          displayLoadingIndicator\r\n          markingType={'period'}\r\n          theme={{\r\n            calendarBackground: '#333248',\r\n            textSectionTitleColor: 'white',\r\n            textSectionTitleDisabledColor: 'gray',\r\n            dayTextColor: 'red',\r\n            todayTextColor: 'white',\r\n            selectedDayTextColor: 'white',\r\n            monthTextColor: 'white',\r\n            indicatorColor: 'white',\r\n            selectedDayBackgroundColor: '#333248',\r\n            arrowColor: 'white',\r\n            // textDisabledColor: 'red',\r\n            'stylesheet.calendar.header': {\r\n              week: {\r\n                marginTop: 30,\r\n                marginHorizontal: 12,\r\n                flexDirection: 'row',\r\n                justifyContent: 'space-between'\r\n              }\r\n            }\r\n          }}\r\n          markedDates={{\r\n            '2012-05-17': {disabled: true},\r\n            '2012-05-08': {textColor: 'pink'},\r\n            '2012-05-09': {textColor: 'pink'},\r\n            '2012-05-14': {startingDay: true, color: 'green', endingDay: true},\r\n            '2012-05-21': {startingDay: true, color: 'green'},\r\n            '2012-05-22': {endingDay: true, color: 'gray'},\r\n            '2012-05-24': {startingDay: true, color: 'gray'},\r\n            '2012-05-25': {color: 'gray'},\r\n            '2012-05-26': {endingDay: true, color: 'gray'}\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithPeriodMarkingAndDotMarking = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with period marking and dot marking</Text>\r\n        <Calendar\r\n        testID={testIDs.calendars.FIRST}\r\n          current={'2012-05-16'}\r\n          minDate={'2012-05-01'}\r\n          onDayPress={onDayPress}\r\n          disabledDaysIndexes={[0, 6]}\r\n          markingType={'period'}\r\n          markedDates={{\r\n            [selected]: {\r\n              selected: true,\r\n              disableTouchEvent: true,\r\n              selectedColor: 'orange',\r\n              selectedTextColor: 'red'\r\n            },\r\n            '2012-05-16': {marked: true, dotColor: '#50cebb'},\r\n            '2012-05-21': {startingDay: true, color: '#50cebb', textColor: 'white'},\r\n            '2012-05-22': {\r\n              color: '#70d7c7',\r\n              customTextStyle: {\r\n                color: '#FFFAAA',\r\n                fontWeight: '700'\r\n              }\r\n            },\r\n            '2012-05-23': {color: '#70d7c7', textColor: 'white', marked: true, dotColor: 'white'},\r\n            '2012-05-24': {color: '#70d7c7', textColor: 'white'},\r\n            '2012-05-25': {\r\n              endingDay: true,\r\n              color: '#50cebb',\r\n              textColor: 'white',\r\n              customContainerStyle: {\r\n                borderTopRightRadius: 5,\r\n                borderBottomRightRadius: 5\r\n              },\r\n              \r\n            },\r\n            ...getDisabledDates('2012-05-01', '2012-05-30', [0, 6])\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithMultiPeriodMarking = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with multi-period marking</Text>\r\n        <Calendar\r\n          style={styles.calendar}\r\n          current={'2012-05-16'}\r\n          markingType={'multi-period'}\r\n          markedDates={{\r\n            '2012-05-16': {\r\n              periods: [\r\n                {startingDay: true, endingDay: false, color: 'green'},\r\n                {startingDay: true, endingDay: false, color: 'orange'}\r\n              ]\r\n            },\r\n            '2012-05-17': {\r\n              periods: [\r\n                {startingDay: false, endingDay: true, color: 'green'},\r\n                {startingDay: false, endingDay: true, color: 'orange'},\r\n                {startingDay: true, endingDay: false, color: 'pink'}\r\n              ]\r\n            },\r\n            '2012-05-18': {\r\n              periods: [\r\n                {startingDay: true, endingDay: true, color: 'orange'},\r\n                {color: 'transparent'},\r\n                {startingDay: false, endingDay: false, color: 'pink'}\r\n              ]\r\n            }\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithCustomMarkingType = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Custom calendar with custom marking type</Text>\r\n        <Calendar\r\n          style={styles.calendar}\r\n          //onDayLongPress={this.onDayLongPress}\r\n          hideExtraDays\r\n          current={'2018-03-01'}\r\n          minDate={'2018-03-01'}\r\n          markingType={'custom'}\r\n          markedDates={{\r\n            '2018-03-01': {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: 'white',\r\n                  elevation: 2\r\n                },\r\n                text: {\r\n                  color: 'red'\r\n                }\r\n              }\r\n            },\r\n            '2018-03-08': {\r\n              selected: true\r\n            },\r\n            '2018-03-09': {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: 'red',\r\n                  elevation: 4\r\n                },\r\n                text: {\r\n                  color: 'white'\r\n                }\r\n              }\r\n            },\r\n            '2018-03-14': {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: 'green'\r\n                },\r\n                text: {\r\n                  color: 'white'\r\n                }\r\n              }\r\n            },\r\n            '2018-03-15': {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: 'black',\r\n                  elevation: 2\r\n                },\r\n                text: {\r\n                  color: 'yellow'\r\n                }\r\n              }\r\n            },\r\n            '2018-03-21': {\r\n              disabled: true\r\n            },\r\n            '2018-03-28': {\r\n              customStyles: {\r\n                text: {\r\n                  color: 'black',\r\n                  fontWeight: 'bold'\r\n                }\r\n              }\r\n            },\r\n            '2018-03-30': {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: 'pink',\r\n                  elevation: 4,\r\n                  borderColor: 'purple',\r\n                  borderWidth: 5\r\n                },\r\n                text: {\r\n                  marginTop: 3,\r\n                  fontSize: 11,\r\n                  color: 'black'\r\n                }\r\n              }\r\n            },\r\n            '2018-03-31': {\r\n              customStyles: {\r\n                container: {\r\n                  backgroundColor: 'orange',\r\n                  borderRadius: 0\r\n                }\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithCustomDay = () => {\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with custom day component</Text>\r\n        <Calendar\r\n          style={[\r\n            styles.calendar,\r\n            {\r\n              height: 250,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: 'lightgrey'\r\n            }\r\n          ]}\r\n          dayComponent={({date, state}) => {\r\n            return (\r\n              <View>\r\n                <Text style={{textAlign: 'center', color: state === 'disabled' ? 'gray' : 'purple'}}>{date.day}</Text>\r\n              </View>\r\n            );\r\n          }}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  const renderCalendarWithCustomHeader = () => {\r\n    const CustomHeader = React.forwardRef((props, ref) => {\r\n      return (\r\n        <View\r\n          ref={ref}\r\n          {...props}\r\n          style={{\r\n            backgroundColor: '#FCC',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-around',\r\n            marginHorizontal: -4,\r\n            padding: 8\r\n          }}\r\n        >\r\n          <Text>This is a custom header!</Text>\r\n          <TouchableOpacity onPress={() => console.warn('Tapped!')}>\r\n            <Text>Tap Me</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Fragment>\r\n        <Text style={styles.text}>Calendar with custom header component</Text>\r\n        <Calendar\r\n          testID={testIDs.calendars.LAST}\r\n          style={[\r\n            styles.calendar,\r\n            {\r\n              height: 250,\r\n              borderBottomWidth: 1,\r\n              borderBottomColor: 'lightgrey'\r\n            }\r\n          ]}\r\n          customHeader={CustomHeader}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false} testID={testIDs.calendars.CONTAINER}>\r\n      {renderCalendarWithSelectableDate()}\r\n      {renderCalendarWithWeekNumbers()}\r\n      {renderCalendarWithMinAndMaxDates()}\r\n      {renderCalendarWithMarkedDatesAndHiddenArrows()}\r\n      {renderCalendarWithMultiDotMarking()}\r\n      {renderCalendarWithPeriodMarkingAndSpinner()}\r\n      {renderCalendarWithPeriodMarkingAndDotMarking()}\r\n      {renderCalendarWithMultiPeriodMarking()}\r\n      {renderCalendarWithCustomMarkingType()}\r\n      {renderCalendarWithCustomDay()}\r\n      {renderCalendarWithCustomHeader()}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nconst styles = StyleSheet.create({\r\n  calendar: {\r\n    marginBottom: 10\r\n  },\r\n  text: {\r\n    textAlign: 'center',\r\n    padding: 10,\r\n    backgroundColor: 'lightgrey',\r\n    fontSize: 16\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}