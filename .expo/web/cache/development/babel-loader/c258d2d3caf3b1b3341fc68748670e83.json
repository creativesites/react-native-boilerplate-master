{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\winston\\\\Documents\\\\react-native-boilerplate-master\\\\src\\\\scenes\\\\profile\\\\Profile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Navigation } from 'react-native-navigation';\n\nvar appIcon = require(\"../img/app-icon-120x120.png\");\n\nvar testIDs = require(\"../testIDs\");\n\nvar MenuScreen = function (_Component) {\n  _inherits(MenuScreen, _Component);\n\n  var _super = _createSuper(MenuScreen);\n\n  function MenuScreen() {\n    _classCallCheck(this, MenuScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MenuScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        testID: testIDs.menu.CONTAINER,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        source: appIcon,\n        style: styles.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        testID: testIDs.menu.CALENDARS,\n        style: styles.menu,\n        onPress: this.onCalendarsPress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, \"Calendars\")), React.createElement(TouchableOpacity, {\n        testID: testIDs.menu.CALENDAR_LIST,\n        style: styles.menu,\n        onPress: this.onCalendarListPress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, \"Calendar List\")), React.createElement(TouchableOpacity, {\n        testID: testIDs.menu.HORIZONTAL_LIST,\n        style: styles.menu,\n        onPress: this.onHorizontalCalendarListPress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, \"Horizontal Calendar List\")), React.createElement(TouchableOpacity, {\n        testID: testIDs.menu.AGENDA,\n        style: styles.menu,\n        onPress: this.onAgendaPress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, \"Agenda\")), React.createElement(TouchableOpacity, {\n        testID: testIDs.menu.EXPANDABLE_CALENDAR,\n        style: styles.menu,\n        onPress: this.onExpandablePress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"Expandable Calendar\")), React.createElement(TouchableOpacity, {\n        style: styles.menu,\n        onPress: this.onTimelinePress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, \"Timeline Calendar\")), React.createElement(TouchableOpacity, {\n        testID: testIDs.menu.WEEK_CALENDAR,\n        style: styles.menu,\n        onPress: this.onWeekPress.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.menuText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, \"Week Calendar\"))));\n    }\n  }, {\n    key: \"pushScreen\",\n    value: function pushScreen(screen, props) {\n      Navigation.push(this.props.componentId, {\n        component: {\n          name: screen,\n          passProps: props,\n          options: {\n            topBar: {\n              title: {\n                text: screen\n              },\n              backButton: {\n                accessibilityLabel: 'back',\n                showTitle: false,\n                color: Platform.OS === 'ios' ? '#2d4150' : undefined\n              }\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"onCalendarsPress\",\n    value: function onCalendarsPress() {\n      this.pushScreen('Calendars');\n    }\n  }, {\n    key: \"onCalendarListPress\",\n    value: function onCalendarListPress() {\n      this.pushScreen('CalendarsList');\n    }\n  }, {\n    key: \"onHorizontalCalendarListPress\",\n    value: function onHorizontalCalendarListPress() {\n      this.pushScreen('HorizontalCalendarList');\n    }\n  }, {\n    key: \"onAgendaPress\",\n    value: function onAgendaPress() {\n      this.pushScreen('Agenda');\n    }\n  }, {\n    key: \"onExpandablePress\",\n    value: function onExpandablePress() {\n      this.pushScreen('ExpandableCalendar');\n    }\n  }, {\n    key: \"onTimelinePress\",\n    value: function onTimelinePress() {\n      this.pushScreen('TimelineCalendar');\n    }\n  }, {\n    key: \"onWeekPress\",\n    value: function onWeekPress() {\n      this.pushScreen('ExpandableCalendar', {\n        weekView: true\n      });\n    }\n  }]);\n\n  return MenuScreen;\n}(Component);\n\nexport { MenuScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  image: {\n    margin: 30,\n    width: 90,\n    height: 90\n  },\n  menu: {\n    width: 300,\n    padding: 10,\n    margin: 10,\n    alignItems: 'center',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#7a92a5'\n  },\n  menuText: {\n    fontSize: 18,\n    color: '#2d4150'\n  }\n});","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/src/scenes/profile/Profile.js"],"names":["React","Component","Navigation","appIcon","require","testIDs","MenuScreen","styles","container","menu","CONTAINER","image","CALENDARS","onCalendarsPress","bind","menuText","CALENDAR_LIST","onCalendarListPress","HORIZONTAL_LIST","onHorizontalCalendarListPress","AGENDA","onAgendaPress","EXPANDABLE_CALENDAR","onExpandablePress","onTimelinePress","WEEK_CALENDAR","onWeekPress","screen","props","push","componentId","component","name","passProps","options","topBar","title","text","backButton","accessibilityLabel","showTitle","color","Platform","OS","undefined","pushScreen","weekView","StyleSheet","create","flex","alignItems","margin","width","height","padding","borderRadius","borderWidth","borderColor","fontSize"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;;AAEA,SAAQC,UAAR,QAAyB,yBAAzB;;AAEA,IAAMC,OAAO,GAAGC,OAAO,+BAAvB;;AACA,IAAMC,OAAO,GAAGD,OAAO,cAAvB;;IAEqBE,U;;;;;;;;;;;;;6BACV;AACP,aACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAA+B,QAAA,MAAM,EAAEH,OAAO,CAACI,IAAR,CAAaC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAEP,OAAf;AAAwB,QAAA,KAAK,EAAEI,MAAM,CAACI,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,gBAAD;AACE,QAAA,MAAM,EAAEN,OAAO,CAACI,IAAR,CAAaG,SADvB;AAEE,QAAA,KAAK,EAAEL,MAAM,CAACE,IAFhB;AAGE,QAAA,OAAO,EAAE,KAAKI,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CAFF,EASE,oBAAC,gBAAD;AACE,QAAA,MAAM,EAAEV,OAAO,CAACI,IAAR,CAAaO,aADvB;AAEE,QAAA,KAAK,EAAET,MAAM,CAACE,IAFhB;AAGE,QAAA,OAAO,EAAE,KAAKQ,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,CATF,EAgBE,oBAAC,gBAAD;AACE,QAAA,MAAM,EAAEV,OAAO,CAACI,IAAR,CAAaS,eADvB;AAEE,QAAA,KAAK,EAAEX,MAAM,CAACE,IAFhB;AAGE,QAAA,OAAO,EAAE,KAAKU,6BAAL,CAAmCL,IAAnC,CAAwC,IAAxC,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALF,CAhBF,EAuBE,oBAAC,gBAAD;AAAkB,QAAA,MAAM,EAAEV,OAAO,CAACI,IAAR,CAAaW,MAAvC;AAA+C,QAAA,KAAK,EAAEb,MAAM,CAACE,IAA7D;AAAmE,QAAA,OAAO,EAAE,KAAKY,aAAL,CAAmBP,IAAnB,CAAwB,IAAxB,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAvBF,EA0BE,oBAAC,gBAAD;AACE,QAAA,MAAM,EAAEV,OAAO,CAACI,IAAR,CAAaa,mBADvB;AAEE,QAAA,KAAK,EAAEf,MAAM,CAACE,IAFhB;AAGE,QAAA,OAAO,EAAE,KAAKc,iBAAL,CAAuBT,IAAvB,CAA4B,IAA5B,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BALF,CA1BF,EAiCE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAER,MAAM,CAACE,IAAhC;AAAsC,QAAA,OAAO,EAAE,KAAKe,eAAL,CAAqBV,IAArB,CAA0B,IAA1B,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAjCF,EAoCE,oBAAC,gBAAD;AACE,QAAA,MAAM,EAAEV,OAAO,CAACI,IAAR,CAAagB,aADvB;AAEE,QAAA,KAAK,EAAElB,MAAM,CAACE,IAFhB;AAGE,QAAA,OAAO,EAAE,KAAKiB,WAAL,CAAiBZ,IAAjB,CAAsB,IAAtB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALF,CApCF,CADF,CADF;AAgDD;;;+BAEUY,M,EAAQC,K,EAAO;AACxB1B,MAAAA,UAAU,CAAC2B,IAAX,CAAgB,KAAKD,KAAL,CAAWE,WAA3B,EAAwC;AACtCC,QAAAA,SAAS,EAAE;AACTC,UAAAA,IAAI,EAAEL,MADG;AAETM,UAAAA,SAAS,EAAEL,KAFF;AAGTM,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAE;AACLC,gBAAAA,IAAI,EAAEV;AADD,eADD;AAINW,cAAAA,UAAU,EAAE;AACVC,gBAAAA,kBAAkB,EAAE,MADV;AAEVC,gBAAAA,SAAS,EAAE,KAFD;AAGVC,gBAAAA,KAAK,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoCC;AAHjC;AAJN;AADD;AAHA;AAD2B,OAAxC;AAkBD;;;uCAEkB;AACjB,WAAKC,UAAL,CAAgB,WAAhB;AACD;;;0CAEqB;AACpB,WAAKA,UAAL,CAAgB,eAAhB;AACD;;;oDAE+B;AAC9B,WAAKA,UAAL,CAAgB,wBAAhB;AACD;;;oCAEe;AACd,WAAKA,UAAL,CAAgB,QAAhB;AACD;;;wCAEmB;AAClB,WAAKA,UAAL,CAAgB,oBAAhB;AACD;;;sCAEiB;AAChB,WAAKA,UAAL,CAAgB,kBAAhB;AACD;;;kCAEa;AACZ,WAAKA,UAAL,CAAgB,oBAAhB,EAAsC;AAACC,QAAAA,QAAQ,EAAE;AAAX,OAAtC;AACD;;;;EAnGqC7C,S;;SAAnBK,U;AAsGrB,IAAMC,MAAM,GAAGwC,UAAU,CAACC,MAAX,CAAkB;AAC/BxC,EAAAA,SAAS,EAAE;AACTyC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/BvC,EAAAA,KAAK,EAAE;AACLwC,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,MAAM,EAAE;AAHH,GALwB;AAU/B5C,EAAAA,IAAI,EAAE;AACJ2C,IAAAA,KAAK,EAAE,GADH;AAEJE,IAAAA,OAAO,EAAE,EAFL;AAGJH,IAAAA,MAAM,EAAE,EAHJ;AAKJD,IAAAA,UAAU,EAAE,QALR;AAMJK,IAAAA,YAAY,EAAE,EANV;AAOJC,IAAAA,WAAW,EAAE,CAPT;AAQJC,IAAAA,WAAW,EAAE;AART,GAVyB;AAoB/B1C,EAAAA,QAAQ,EAAE;AACR2C,IAAAA,QAAQ,EAAE,EADF;AAERjB,IAAAA,KAAK,EAAE;AAFC;AApBqB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Platform, StyleSheet, View, ScrollView, TouchableOpacity, Text, Image} from 'react-native';\nimport {Navigation} from 'react-native-navigation';\n\nconst appIcon = require('../img/app-icon-120x120.png');\nconst testIDs = require('../testIDs');\n\nexport default class MenuScreen extends Component {\n  render() {\n    return (\n      <ScrollView>\n        <View style={styles.container} testID={testIDs.menu.CONTAINER}>\n          <Image source={appIcon} style={styles.image} />\n          <TouchableOpacity\n            testID={testIDs.menu.CALENDARS}\n            style={styles.menu}\n            onPress={this.onCalendarsPress.bind(this)}\n          >\n            <Text style={styles.menuText}>Calendars</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            testID={testIDs.menu.CALENDAR_LIST}\n            style={styles.menu}\n            onPress={this.onCalendarListPress.bind(this)}\n          >\n            <Text style={styles.menuText}>Calendar List</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            testID={testIDs.menu.HORIZONTAL_LIST}\n            style={styles.menu}\n            onPress={this.onHorizontalCalendarListPress.bind(this)}\n          >\n            <Text style={styles.menuText}>Horizontal Calendar List</Text>\n          </TouchableOpacity>\n          <TouchableOpacity testID={testIDs.menu.AGENDA} style={styles.menu} onPress={this.onAgendaPress.bind(this)}>\n            <Text style={styles.menuText}>Agenda</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            testID={testIDs.menu.EXPANDABLE_CALENDAR}\n            style={styles.menu}\n            onPress={this.onExpandablePress.bind(this)}\n          >\n            <Text style={styles.menuText}>Expandable Calendar</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.menu} onPress={this.onTimelinePress.bind(this)}>\n            <Text style={styles.menuText}>Timeline Calendar</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            testID={testIDs.menu.WEEK_CALENDAR}\n            style={styles.menu}\n            onPress={this.onWeekPress.bind(this)}\n          >\n            <Text style={styles.menuText}>Week Calendar</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    );\n  }\n\n  pushScreen(screen, props) {\n    Navigation.push(this.props.componentId, {\n      component: {\n        name: screen,\n        passProps: props,\n        options: {\n          topBar: {\n            title: {\n              text: screen\n            },\n            backButton: {\n              accessibilityLabel: 'back',\n              showTitle: false, // iOS only\n              color: Platform.OS === 'ios' ? '#2d4150' : undefined\n            }\n          }\n        }\n      }\n    });\n  }\n\n  onCalendarsPress() {\n    this.pushScreen('Calendars');\n  }\n\n  onCalendarListPress() {\n    this.pushScreen('CalendarsList');\n  }\n\n  onHorizontalCalendarListPress() {\n    this.pushScreen('HorizontalCalendarList');\n  }\n\n  onAgendaPress() {\n    this.pushScreen('Agenda');\n  }\n\n  onExpandablePress() {\n    this.pushScreen('ExpandableCalendar');\n  }\n\n  onTimelinePress() {\n    this.pushScreen('TimelineCalendar');\n  }\n\n  onWeekPress() {\n    this.pushScreen('ExpandableCalendar', {weekView: true});\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  image: {\n    margin: 30,\n    width: 90,\n    height: 90\n  },\n  menu: {\n    width: 300,\n    padding: 10,\n    margin: 10,\n    // backgroundColor: '#f2F4f5',\n    alignItems: 'center',\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#7a92a5'\n  },\n  menuText: {\n    fontSize: 18,\n    color: '#2d4150'\n  }\n});"]},"metadata":{},"sourceType":"module"}