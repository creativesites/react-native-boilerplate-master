{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _ACTION_HANDLERS;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SAVE_ME = 'SAVE_ME';\nvar LOGGED_IN = 'LOGGED_IN';\nvar initialState = {\n  checked: false,\n  loggedIn: false,\n  me: {}\n};\nexport var authenticate = function authenticate() {\n  return function (dispatch) {\n    return dispatch({\n      type: LOGGED_IN,\n      loggedIn: true,\n      checked: true\n    });\n  };\n};\nexport var saveMe = function saveMe(me) {\n  return function (dispatch) {\n    return dispatch({\n      type: SAVE_ME,\n      me: me\n    });\n  };\n};\nexport var actions = {\n  authenticate: authenticate,\n  saveMe: saveMe\n};\nvar ACTION_HANDLERS = (_ACTION_HANDLERS = {}, _defineProperty(_ACTION_HANDLERS, LOGGED_IN, function (state, _ref) {\n  var loggedIn = _ref.loggedIn,\n      checked = _ref.checked;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    loggedIn: loggedIn,\n    checked: checked\n  });\n}), _defineProperty(_ACTION_HANDLERS, SAVE_ME, function (state, _ref2) {\n  var me = _ref2.me;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    me: me\n  });\n}), _ACTION_HANDLERS);\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var handler = ACTION_HANDLERS[action.type];\n  return handler ? handler(state, action) : state;\n}","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/src/modules/app.module.js"],"names":["SAVE_ME","LOGGED_IN","initialState","checked","loggedIn","me","authenticate","dispatch","type","saveMe","actions","ACTION_HANDLERS","state","reducer","action","handler"],"mappings":";;;;;;;;AAIA,IAAMA,OAAO,GAAG,SAAhB;AACA,IAAMC,SAAS,GAAG,WAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,QAAQ,EAAE,KAFS;AAGnBC,EAAAA,EAAE,EAAE;AAHe,CAArB;AAWA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAAC;AACvDC,MAAAA,IAAI,EAAEP,SADiD;AAEvDG,MAAAA,QAAQ,EAAE,IAF6C;AAGvDD,MAAAA,OAAO,EAAE;AAH8C,KAAD,CAAtB;AAAA,GAAN;AAAA,CAArB;AAMP,OAAO,IAAMM,MAAM,GAAG,SAATA,MAAS,CAACJ,EAAD;AAAA,SAAQ,UAACE,QAAD;AAAA,WAAcA,QAAQ,CAAC;AACnDC,MAAAA,IAAI,EAAER,OAD6C;AAEnDK,MAAAA,EAAE,EAAFA;AAFmD,KAAD,CAAtB;AAAA,GAAR;AAAA,CAAf;AAKP,OAAO,IAAMK,OAAO,GAAG;AACrBJ,EAAAA,YAAY,EAAZA,YADqB;AAErBG,EAAAA,MAAM,EAANA;AAFqB,CAAhB;AASP,IAAME,eAAe,6DAClBV,SADkB,EACN,UAACW,KAAD;AAAA,MAAUR,QAAV,QAAUA,QAAV;AAAA,MAAoBD,OAApB,QAAoBA,OAApB;AAAA,yCACRS,KADQ;AAEXR,IAAAA,QAAQ,EAARA,QAFW;AAGXD,IAAAA,OAAO,EAAPA;AAHW;AAAA,CADM,qCAMlBH,OANkB,EAMR,UAACY,KAAD;AAAA,MAAUP,EAAV,SAAUA,EAAV;AAAA,yCACNO,KADM;AAETP,IAAAA,EAAE,EAAFA;AAFS;AAAA,CANQ,oBAArB;AAgBA,eAAe,SAASQ,OAAT,GAA+C;AAAA,MAA9BD,KAA8B,uEAAtBV,YAAsB;AAAA,MAARY,MAAQ;AAC5D,MAAMC,OAAO,GAAGJ,eAAe,CAACG,MAAM,CAACN,IAAR,CAA/B;AAEA,SAAOO,OAAO,GAAGA,OAAO,CAACH,KAAD,EAAQE,MAAR,CAAV,GAA4BF,KAA1C;AACD","sourcesContent":["// ------------------------------------\n// Constants\n// ------------------------------------\n\nconst SAVE_ME = 'SAVE_ME'\nconst LOGGED_IN = 'LOGGED_IN'\n\nconst initialState = {\n  checked: false,\n  loggedIn: false,\n  me: {},\n}\n\n// ------------------------------------\n// Actions\n// ------------------------------------\n\n// TODO: check the user's login state\nexport const authenticate = () => (dispatch) => dispatch({\n  type: LOGGED_IN,\n  loggedIn: true,\n  checked: true,\n})\n\nexport const saveMe = (me) => (dispatch) => dispatch({\n  type: SAVE_ME,\n  me,\n})\n\nexport const actions = {\n  authenticate,\n  saveMe,\n}\n\n// ------------------------------------\n// Action Handlers\n// ------------------------------------\n\nconst ACTION_HANDLERS = {\n  [LOGGED_IN]: (state, { loggedIn, checked }) => ({\n    ...state,\n    loggedIn,\n    checked,\n  }),\n  [SAVE_ME]: (state, { me }) => ({\n    ...state,\n    me,\n  }),\n}\n\n// ------------------------------------\n// Reducer\n// ------------------------------------\n\nexport default function reducer(state = initialState, action) {\n  const handler = ACTION_HANDLERS[action.type]\n\n  return handler ? handler(state, action) : state\n}\n"]},"metadata":{},"sourceType":"module"}