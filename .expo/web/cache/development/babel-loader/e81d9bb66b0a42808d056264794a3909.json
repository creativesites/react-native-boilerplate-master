{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\winston\\\\Documents\\\\react-native-boilerplate-master\\\\node_modules\\\\react-native-d3multiline-chart\\\\utils\\\\createLegend.js\";\nimport React, { Component } from 'react';\nimport { Rect, G, Text, Circle } from 'react-native-svg';\nimport _ from 'lodash';\nexport default function createLegend(legendColor, legendText, width, margin, legendStyle, circleLegendType) {\n  var _this = this;\n\n  var marginLegend = -100;\n  var legendGroup;\n\n  if (!circleLegendType) {\n    legendGroup = _.map(legendColor, function (d, i) {\n      marginLegend += 100;\n      return React.createElement(G, {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, React.createElement(Rect, {\n        width: legendStyle.width,\n        fillOpacity: legendStyle.fillOpacity,\n        height: legendStyle.height,\n        x: (width / legendColor.length + marginLegend - 35) / 1.3,\n        y: margin.top - 15,\n        stroke: legendColor[i],\n        fill: legendColor[i],\n        strokeWidth: legendStyle.strokeWidth,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        textAnchor: \"middle\",\n        fontSize: legendStyle.legendFontSize,\n        x: (width / legendColor.length + marginLegend - 3) / 1.3,\n        y: margin.top - 15,\n        fill: legendStyle.legentTextFill,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, legendText[i]));\n    });\n  } else {\n    legendGroup = _.map(legendColor, function (d, i) {\n      marginLegend += 100;\n      return React.createElement(G, {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, React.createElement(Circle, {\n        key: 'circle_' + i,\n        strokeWidth: 2.5,\n        stroke: legendColor[i],\n        fill: 'white',\n        cx: (width / legendColor.length + marginLegend - 35) / 1.3,\n        cy: margin.top - 15,\n        r: 4,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        fontSize: legendStyle.legendFontSize,\n        x: (width / legendColor.length + marginLegend - 15) / 1.3,\n        y: margin.top - 24,\n        fill: legendStyle.legentTextFill,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, legendText[i]));\n    });\n  }\n\n  return legendGroup;\n}","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/node_modules/react-native-d3multiline-chart/utils/createLegend.js"],"names":["React","Component","Rect","G","Text","Circle","_","createLegend","legendColor","legendText","width","margin","legendStyle","circleLegendType","marginLegend","legendGroup","map","d","i","fillOpacity","height","length","top","strokeWidth","legendFontSize","legentTextFill"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Rect, G, Text, Circle} from 'react-native-svg';\r\nimport _ from 'lodash';\r\n\r\nexport default function createLegend (\r\n  legendColor,\r\n  legendText,\r\n  width,\r\n  margin,\r\n  legendStyle,\r\n  circleLegendType\r\n) {\r\n  let marginLegend = -100;\r\n  var legendGroup;\r\n  if (!circleLegendType) {\r\n    legendGroup = _.map (legendColor, (d, i) => {\r\n      marginLegend += 100;\r\n      return (\r\n        <G key={i}>\r\n          <Rect\r\n            width={legendStyle.width}\r\n            fillOpacity={legendStyle.fillOpacity}\r\n            height={legendStyle.height}\r\n            x={(width / legendColor.length + marginLegend - 35) / 1.3}\r\n            y={margin.top - 15}\r\n            stroke={legendColor[i]}\r\n            fill={legendColor[i]}\r\n            strokeWidth={legendStyle.strokeWidth}\r\n          />\r\n          <Text\r\n            textAnchor=\"middle\"\r\n            fontSize={legendStyle.legendFontSize}\r\n            x={(width / legendColor.length + marginLegend - 3) / 1.3}\r\n            y={margin.top - 15}\r\n            fill={legendStyle.legentTextFill}\r\n          >\r\n            {legendText[i]}\r\n          </Text>\r\n        </G>\r\n      );\r\n    });\r\n  } else {\r\n    legendGroup = _.map (legendColor, (d, i) => {\r\n      marginLegend += 100;\r\n      return (\r\n        <G key={i}>\r\n          <Circle\r\n            key={'circle_' + i}\r\n            strokeWidth={2.5}\r\n            stroke={legendColor[i]}\r\n            fill={'white'}\r\n            cx={(width / legendColor.length + marginLegend - 35) / 1.3}\r\n            cy={margin.top - 15}\r\n            r={4}\r\n          />\r\n          <Text\r\n            fontSize={legendStyle.legendFontSize}\r\n            x={(width / legendColor.length + marginLegend - 15) / 1.3}\r\n            y={margin.top - 24}\r\n            fill={legendStyle.legentTextFill}\r\n          >\r\n            {legendText[i]}\r\n          </Text>\r\n        </G>\r\n      );\r\n    });\r\n  }\r\n\r\n  return legendGroup;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}