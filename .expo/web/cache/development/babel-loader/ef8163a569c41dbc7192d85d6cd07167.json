{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actions as appActions } from \"../modules/app.module\";\n\nvar Connector = function (_Component) {\n  _inherits(Connector, _Component);\n\n  var _super = _createSuper(Connector);\n\n  function Connector() {\n    _classCallCheck(this, Connector);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Connector, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          state = _this$props.state,\n          actions = _this$props.actions,\n          children = _this$props.children;\n      return children({\n        state: state,\n        actions: actions\n      });\n    }\n  }]);\n\n  return Connector;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  var actionList = [{\n    label: 'app',\n    value: appActions\n  }];\n  return {\n    actions: actionList.reduce(function (prev, cur) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, cur.label, bindActionCreators(cur.value, dispatch)));\n    }, {})\n  };\n};\n\nConnector.propTypes = {\n  state: PropTypes.shape({}).isRequired,\n  actions: PropTypes.shape({}).isRequired,\n  children: PropTypes.oneOfType([PropTypes.shape({}), PropTypes.func]).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Connector);","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/src/utils/connector.js"],"names":["Component","PropTypes","connect","bindActionCreators","actions","appActions","Connector","props","state","children","mapStateToProps","mapDispatchToProps","dispatch","actionList","label","value","reduce","prev","cur","propTypes","shape","isRequired","oneOfType","func"],"mappings":";;;;;;;;;;;;;;;AAuBA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAO,IAAIC,UAApB;;IAEMC,S;;;;;;;;;;;;;WACJ,kBAAS;AAAA,wBAC8B,KAAKC,KADnC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQJ,OADR,eACQA,OADR;AAAA,UACiBK,QADjB,eACiBA,QADjB;AAGP,aAAOA,QAAQ,CAAC;AAAED,QAAAA,KAAK,EAALA,KAAF;AAASJ,QAAAA,OAAO,EAAPA;AAAT,OAAD,CAAf;AACD;;;;EALqBJ,S;;AAQxB,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAACF,KAAD;AAAA,SAAY;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAZ;AAAA,CAAxB;;AACA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,MAAMC,UAAU,GAAG,CAEjB;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,KAAK,EAAEV;AAAvB,GAFiB,CAAnB;AAMA,SAAO;AACLD,IAAAA,OAAO,EAAES,UAAU,CAACG,MAAX,CACP,UAACC,IAAD,EAAOC,GAAP;AAAA,6CACKD,IADL,2BAEGC,GAAG,CAACJ,KAFP,EAEeX,kBAAkB,CAACe,GAAG,CAACH,KAAL,EAAYH,QAAZ,CAFjC;AAAA,KADO,EAKP,EALO;AADJ,GAAP;AASD,CAhBD;;AAkBAN,SAAS,CAACa,SAAV,GAAsB;AACpBX,EAAAA,KAAK,EAAEP,SAAS,CAACmB,KAAV,CAAgB,EAAhB,EAAoBC,UADP;AAEpBjB,EAAAA,OAAO,EAAEH,SAAS,CAACmB,KAAV,CAAgB,EAAhB,EAAoBC,UAFT;AAGpBZ,EAAAA,QAAQ,EAAER,SAAS,CAACqB,SAAV,CAAoB,CAACrB,SAAS,CAACmB,KAAV,CAAgB,EAAhB,CAAD,EAAsBnB,SAAS,CAACsB,IAAhC,CAApB,EACPF;AAJiB,CAAtB;AAOA,eAAenB,OAAO,CAACQ,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,SAA7C,CAAf","sourcesContent":["/**\n * Connects a component to the redux store and dispatch functions\n * Proposition: one import to take care of accessing store and actions\n *\n * Provides access to state + actions by rendering children as function\n *\n * Usage:\n * ```\n * <Connector>\n *  {\n *    ({ state, actions }) => {\n *      // state and actions are organized as\n *      // state.someModule.foo, actions.someModule.actions, etc\n *      // do something with state, actions\n *    }\n *  }\n * </Connector>\n * ```\n *\n * To Add Actions:\n * - import actions\n * - add to the `actionList` with a label and value\n */\nimport { Component } from 'react'\nimport { PropTypes } from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { actions as appActions } from 'modules/app.module'\n\nclass Connector extends Component {\n  render() {\n    const { state, actions, children } = this.props\n\n    return children({ state, actions })\n  }\n}\n\nconst mapStateToProps = (state) => ({ state })\nconst mapDispatchToProps = (dispatch) => {\n  const actionList = [\n    // label: String, value: Object\n    { label: 'app', value: appActions },\n    // add more actions here\n  ]\n\n  return {\n    actions: actionList.reduce(\n      (prev, cur) => ({\n        ...prev,\n        [cur.label]: bindActionCreators(cur.value, dispatch),\n      }),\n      {},\n    ),\n  }\n}\n\nConnector.propTypes = {\n  state: PropTypes.shape({}).isRequired,\n  actions: PropTypes.shape({}).isRequired,\n  children: PropTypes.oneOfType([PropTypes.shape({}), PropTypes.func])\n    .isRequired,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Connector)\n"]},"metadata":{},"sourceType":"module"}