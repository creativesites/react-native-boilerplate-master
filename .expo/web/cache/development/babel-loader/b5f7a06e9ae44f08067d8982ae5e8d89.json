{"ast":null,"code":"import React, { Component } from 'react';\nexport function calculateOverallLineChartData(data) {\n  var totalData = [];\n\n  for (var i = 0; i < data.length; i++) {\n    for (var j = 0; j < data[i].length; j++) {\n      totalData.push(data[i][j]);\n    }\n  }\n\n  return totalData;\n}\nexport function buildColorArray(data, color) {\n  var dataPointsColor = [];\n\n  for (var i = 0; i < data.length; i++) {\n    for (var j = 0; j < data[i].length; j++) {\n      dataPointsColor.push(color[i] ? color[i] : '#000');\n    }\n  }\n\n  return dataPointsColor;\n}","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/node_modules/react-native-d3multiline-chart/utils/dataCalculation.js"],"names":["React","Component","calculateOverallLineChartData","data","totalData","i","length","j","push","buildColorArray","color","dataPointsColor"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,SAASC,6BAAT,CAAuCC,IAAvC,EACP;AACI,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAI,IAAIC,CAAC,GAAE,CAAX,EAAaA,CAAC,GAACF,IAAI,CAACG,MAApB,EAA2BD,CAAC,EAA5B,EACA;AACI,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,IAAI,CAACE,CAAD,CAAJ,CAAQC,MAAtB,EAA6BC,CAAC,EAA9B,EACA;AACAH,MAAAA,SAAS,CAACI,IAAV,CAAeL,IAAI,CAACE,CAAD,CAAJ,CAAQE,CAAR,CAAf;AACC;AACJ;;AAED,SAAOH,SAAP;AACH;AAED,OAAO,SAASK,eAAT,CAAyBN,IAAzB,EAA8BO,KAA9B,EACP;AACI,MAAIC,eAAe,GAAG,EAAtB;;AACA,OAAI,IAAIN,CAAC,GAAE,CAAX,EAAaA,CAAC,GAACF,IAAI,CAACG,MAApB,EAA2BD,CAAC,EAA5B,EACA;AACI,SAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,IAAI,CAACE,CAAD,CAAJ,CAAQC,MAAtB,EAA6BC,CAAC,EAA9B,EACA;AACEI,MAAAA,eAAe,CAACH,IAAhB,CAAsBE,KAAK,CAACL,CAAD,CAAL,GAAWK,KAAK,CAACL,CAAD,CAAhB,GAAsB,MAA5C;AACD;AACJ;;AACD,SAAOM,eAAP;AACH","sourcesContent":["import React, { Component } from 'react' \r\n\r\nexport function calculateOverallLineChartData(data)\r\n{\r\n    let totalData = [];\r\n    for(let i =0;i<data.length;i++)\r\n    {\r\n        for(let j=0;j<data[i].length;j++)\r\n        {\r\n        totalData.push(data[i][j])  \r\n        }\r\n    }\r\n\r\n    return totalData   \r\n}\r\n\r\nexport function buildColorArray(data,color)\r\n{\r\n    let dataPointsColor = []\r\n    for(let i =0;i<data.length;i++)\r\n    {\r\n        for(let j=0;j<data[i].length;j++)\r\n        {\r\n          dataPointsColor.push( color[i] ? color[i] : '#000')  \r\n        }\r\n    }\r\n    return dataPointsColor\r\n}\r\n\r\n// export function getDomainPointsXAxis(minX,maxX)\r\n// {\r\n//     return [minX,maxX]\r\n// }\r\n\r\n// export function getDomainPointsYAxis(minX,maxX)\r\n// {\r\n//     return [minX,maxX]\r\n// }"]},"metadata":{},"sourceType":"module"}