{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport app from \"../modules/app.module\";\n\nvar analytics = function analytics() {\n  return function (next) {\n    return function (action) {\n      window.dataLayer = window.dataLayer || [];\n      window.dataLayer.push({\n        event: action.type,\n        payload: action.payload\n      });\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var reducers = combineReducers({\n    app: app\n  });\n  var middlewares = [thunk, process.env.NODE_ENV !== 'production' && logger, analytics].filter(Boolean);\n  var enhancer = compose(applyMiddleware.apply(void 0, _toConsumableArray(middlewares)));\n  var store = createStore(reducers, initialState, enhancer);\n  return store;\n};\n\nvar store = configureStore();\nexport default store;","map":{"version":3,"sources":["C:/Users/winston/Documents/react-native-boilerplate-master/src/utils/store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","thunk","logger","app","analytics","next","action","window","dataLayer","push","event","type","payload","configureStore","initialState","reducers","middlewares","process","env","NODE_ENV","filter","Boolean","enhancer","store"],"mappings":";AAAA,SACEA,WADF,EACeC,eADf,EACgCC,OADhC,EACyCC,eADzC,QAEO,OAFP;AAGA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,GAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,UAACC,IAAD;AAAA,WAAU,UAACC,MAAD,EAAY;AAC5CC,MAAAA,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACC,SAAP,IAAoB,EAAvC;AACAD,MAAAA,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsB;AACpBC,QAAAA,KAAK,EAAEJ,MAAM,CAACK,IADM;AAEpBC,QAAAA,OAAO,EAAEN,MAAM,CAACM;AAFI,OAAtB;AAKA,aAAOP,IAAI,CAACC,MAAD,CAAX;AACD,KARuB;AAAA,GAAN;AAAA,CAAlB;;AAWA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAAuB;AAAA,MAAtBC,YAAsB,uEAAP,EAAO;AAC5C,MAAMC,QAAQ,GAAGf,eAAe,CAAC;AAC/BG,IAAAA,GAAG,EAAHA;AAD+B,GAAD,CAAhC;AAKA,MAAMa,WAAW,GAAG,CAClBf,KADkB,EAElBgB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCjB,MAFvB,EAGlBE,SAHkB,EAIlBgB,MAJkB,CAIXC,OAJW,CAApB;AAKA,MAAMC,QAAQ,GAAGvB,OAAO,CAACD,eAAe,MAAf,4BAAmBkB,WAAnB,EAAD,CAAxB;AACA,MAAMO,KAAK,GAAG1B,WAAW,CAACkB,QAAD,EAAWD,YAAX,EAAyBQ,QAAzB,CAAzB;AAEA,SAAOC,KAAP;AACD,CAfD;;AAiBA,IAAMA,KAAK,GAAGV,cAAc,EAA5B;AAEA,eAAeU,KAAf","sourcesContent":["import {\n  createStore, applyMiddleware, compose, combineReducers,\n} from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport app from 'modules/app.module'\n\nconst analytics = () => (next) => (action) => {\n  window.dataLayer = window.dataLayer || []\n  window.dataLayer.push({\n    event: action.type,\n    payload: action.payload,\n  })\n\n  return next(action)\n}\n\n// Redux store config\nconst configureStore = (initialState = {}) => {\n  const reducers = combineReducers({\n    app,\n  })\n\n  // Middleware and store enhancers\n  const middlewares = [\n    thunk,\n    process.env.NODE_ENV !== 'production' && logger,\n    analytics,\n  ].filter(Boolean)\n  const enhancer = compose(applyMiddleware(...middlewares))\n  const store = createStore(reducers, initialState, enhancer)\n\n  return store\n}\n\nconst store = configureStore()\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}